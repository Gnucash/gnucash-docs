<!--
      (Do not remove this comment block.)
  Version: 2.0.0
  Last modified: 2014-08-28 (fell)
       modified: October 25th 2010
       modified: January 12th 2007
       modified: July 9th 2006
  Maintainers:
               Cristian Marchi <cri.penta@gmail.com>
               Chris Lyttle <chris@wilddev.net>
  Author:
  		Jon Lapham <lapham@extracta.com.br>
  	Updated	Bengt Thuree <bengt@thuree.com>
  Originally written by Carol Champagne.
  Translators:
               (translators put your name and email here)
-->
<chapter id="chapter_basics">
  <title>The Basics</title>

  <para>This chapter will introduce some of the basics of using <application>&app;</application>. It is
  recommended that you read through this chapter, before starting to do any
  real work with <application>&app;</application>. Next chapters will begin to show
  you hands on examples.</para>

  <sect1 id="basics-accounting1">
    <title>Accounting Concepts</title>

    <para><application>&app;</application> is easy enough to use that you do not need to have a
    complete understanding of accounting principles to find it useful.
    However, you will find that some basic accounting knowledge will prove to
    be invaluable as <application>&app;</application> was designed using these principles as a
    template. It is highly recommended that you understand this section of the
    guide before proceeding.</para>

    <sect2 id="basics-accounting52">
      <title>The 5 Basic Accounts</title>

      <para>Basic accounting rules group all finance related things into 5
      fundamental types of <quote>accounts</quote>. That is, everything that
      accounting deals with can be placed into one of these 5 accounts:</para>

      <variablelist>
      <title>Account types</title>
        <varlistentry>
          <term><emphasis>Assets</emphasis></term>
          <listitem>
            <para>Things you own</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis>Liabilities</emphasis></term>
          <listitem>
            <para>Things you owe</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis>Equity</emphasis></term>
          <listitem>
            <para>Overall net worth</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis>Income</emphasis></term>
          <listitem>
            <para>Increases the value of your
            accounts</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis>Expenses</emphasis></term>
          <listitem>
            <para>Decreases the value of your
            accounts</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>It is clear that it is possible to categorize your financial world
      into these 5 groups. For example, the cash in your bank account is an
      asset, your mortgage is a liability, your paycheck is income, and the
      cost of dinner last night is an expense.</para>
    </sect2>

    <sect2 id="basics-accountingequation2">
      <title>The Accounting Equation</title>

      <para>With the 5 basic accounts defined, what is the relationship
      between them? How does one type of account affect the others? Firstly,
      equity is defined by assets and liability. That is, your net worth is
      calculated by subtracting your liabilities from your assets:</para>

      <para><emphasis>Assets - Liabilities = Equity</emphasis></para>

      <para>Furthermore, you can increase your equity through income, and
      decrease equity through expenses. This makes sense of course, when you
      receive a paycheck you become <quote>richer</quote> and when you pay for dinner you
      become <quote>poorer</quote>. This is expressed mathematically in what is known as
      the Accounting Equation:</para>

      <para><emphasis>Assets - Liabilities = Equity + (Income -
      Expenses)</emphasis></para>

      <para>This equation must always be balanced, a condition that can only
      be satisfied if you enter values to multiple accounts. For example: if
      you receive money in the form of income you must see an equal increase
      in your assets. As another example, you could have an increase in assets
      if you have a parallel increase in liabilities.</para>

      <figure pgwide="1">
        <title>The basic accounts relationships</title>
        <screenshot id="basics-AccountRelationships">
          <mediaobject>
            <imageobject role="html">
              <imagedata fileref="figures/basics_AccountRelationships.png"
                         format="PNG" srccredit="Geert Janssens" ></imagedata>
            </imageobject>
            <imageobject role="fo">
              <imagedata fileref="figures/basics_AccountRelationships.svg"
                         format="SVG" srccredit="Geert Janssens"
                         contentwidth="4in"></imagedata>
            </imageobject>

            <textobject>
              <phrase>The basic accounts relationships</phrase>
            </textobject>

            <caption>
              <para>A graphical view of the relationship between the 5 basic
              accounts. Net worth (equity) increases through income and
              decreases through expenses. The arrows represent the movement of
              value.</para>
            </caption>
          </mediaobject>
        </screenshot>
      </figure>
    </sect2>

    <sect2 id="basics-accountingdouble2">
      <title>Double Entry</title>

      <para>The accounting equation is the very heart of a <firstterm>double entry
      accounting system</firstterm>. For every change in value of one account in the
      Accounting Equation, there must be a balancing change in another. This
      concept is known as the <firstterm>Principle of Balance</firstterm>, and
      is of fundamental importance for understanding <application>&app;</application> and other double
      entry accounting systems. When you work with <application>&app;</application>, you will always be
      concerned with at least 2 accounts, to keep the accounting equation
      balanced.</para>

      <para>Balancing changes (or transfers of money) among accounts are
      done by debiting one account and simultaneously crediting another.
      Accounting <firstterm>debits</firstterm> and
      <firstterm>credits</firstterm> do not mean <quote>decrease</quote>
      and <quote>increase</quote>. Debits and credits each increase certain
      types of accounts and decrease others. In asset and expense accounts,
      debits increase the balance and credits decrease the balance. In
      liability, equity and income accounts, credits increase the balance
      and debits decrease the balance.</para>

      <para>In traditional double-entry accounting, the left column in the
      register is used for debits, while the right column is used for credits.
      Accountants record increases in asset and expense accounts on the
      debit (left) side, and they record increases in liability, revenue, and equity
      accounts on the credit (right) side. <application>&app;</application>
      follows this convention in the register.</para>

      <note>
        <para>This accounting terminology can be confusing to new users,
        which is why <application>&app;</application> allows you to use the
        common terms <guilabel>Deposit</guilabel> and
        <guilabel>Withdrawal</guilabel>. If you prefer the formal accounting
        terms, you can change the account register column headings to use
        them in the <guilabel>Accounts</guilabel> tab under
        <guilabel>Preferences</guilabel> (see the
        <application>&app;</application> Help Manual for more information on
        setting preferences).</para>
      </note>

      <warning>
        <para>Common use of the words <emphasis>debit</emphasis> and <emphasis>credit</emphasis>
        does not match how accountants use these words. In common use,
        <emphasis>credit</emphasis> generally has positive associations; in accounting,
        <emphasis>credit</emphasis> means
        <emphasis>affecting the right column</emphasis> of the ledger sheet of an account.
        This is associated with a <emphasis>decrease</emphasis> in asset and expense,
        but an <emphasis>increase</emphasis> of income, liability and equity accounts.</para>
        <para>For more details see <ulink url="http://en.wikipedia.org/wiki/Debits_and_credits"></ulink>.</para>
      </warning>

    </sect2>
  </sect1>

  <sect1 id="basics-entry1">
    <title>Data Entry Concepts</title>

    <para>When entering data in <application>&app;</application>, you should be aware of the 3 levels
    of organization in which <application>&app;</application> divides your data: files, accounts and
    transactions. These levels are presented in their order of complexity, one
    file contains many accounts and one account contains many transactions.
    This division is fundamental to understanding how to use <application>&app;</application>.</para>

    <sect2 id="basics-files2">
      <title>Files</title>

      <para><application>&app;</application> stores information at the
      highest level in files. A file can be stored on your computer either
      as a single <acronym>XML</acronym> file (in all versions of
      <application>&app;</application>), or in a <acronym>SQL</acronym>
      database (in <application>&app;</application> version 2.4 and higher).</para>

      <note>
        <para><acronym>SQL</acronym> is pronounced <quote>sequel</quote>,
        so in spoken and written language we would say <quote>a SQL
        database</quote>.</para>
      </note>

      <para>With the <acronym>XML</acronym> file format,
      <application>&app;</application> stores your data in an
      <acronym>XML</acronym> data file, usually in compressed format
      (although this can be changed in the <guilabel>General</guilabel>
      tab of the <application>&app;</application> <guilabel>Preferences</guilabel>).</para>

      <para>With <acronym>SQL</acronym> storage,
      <application>&app;</application> stores your data in a
      <acronym>SQL</acronym> database under the database application you
      select (SQLite3, MySQL or PostgreSQL).</para>

      <para>You will need one main file or database for each set of
      accounts you are maintaining. To learn how to create and manage
      <application>&app;</application> files, see <xref
      linkend="basics-files1"/>.</para>

      <note>
        <para>If you think you might need more than one set of accounts,
        you might want to consult a professional accountant or bookkeeper
        before proceeding. Most users will probably have only one data
        file.</para>
      </note>

      <para>Backup files and log files are automatically generated by
      <application>&app;</application> when appropriate. Backup and log
      files are described in <xref linkend="basics-backup1"/>.</para>
    </sect2> <!-- basics-files2 -->
    <sect2 id="basics-accounts2">
      <title>Accounts</title>

      <para>An <firstterm>account</firstterm> keeps track of what you own,
      owe, spend or receive. Each <application>&app;</application> file can
      contain any number of accounts, and each account can contain many
      sub-accounts up to an arbitrary number of levels. This simple feature
      gives <application>&app;</application> much of its power in managing
      your finances, as you will see in later chapters.</para>

      <para>Examples of accounts include: checking accounts, savings
      accounts, credit card accounts, mortgages, and loans. Each
      <application>&app;</application> account tracks the activity for that
      <quote>real</quote> account, and can inform you of its status.</para>

      <para>In addition, accounts are also used to categorize the money you
      receive or spend. For example, you can create expense accounts to
      track the money you pay on utilities or groceries. Even though these
      are not accounts that receive statements, they allow you to determine
      how much money is being spent in each of these areas.</para>

      <para>Accounts will be covered in more detail in <xref
      linkend="chapter_accts"/>.</para>
    </sect2> <!-- basics-accounts2 -->
    <sect2 id="basics-transactions2">
      <title>Transactions</title>

      <para>A <firstterm>transaction</firstterm> represents the movement of
      money among accounts. Whenever you spend or receive money, or
      transfer money between accounts, that is a transaction.</para>

      <para>Examples of transactions are: paying a phone bill, transferring
      money from savings to checking, buying a pizza, withdrawing money,
      and depositing a paycheck. <xref linkend="chapter_txns"/> goes more
      in depth on how to enter transactions.</para>

      <para>In <link linkend="basics-accountingdouble2">double entry accounting</link>,
      transactions always involve at least two accounts&ndash;a source
      account and a destination account.
      <application>&app;</application> manages this by inserting a line
      into the transaction for every account that is affected, and
      recording the amounts involved in each line. A line within a
      transaction that records the account and amount of money involved is
      called a <firstterm>split</firstterm>. A transaction can contain an
      arbitrary number of splits.</para>
      <note>
        <para>Splits in transactions will be covered in <xref
        linkend="txns-registers-multiaccount2"/></para>
      </note>
    </sect2> <!-- basics-transactions2 -->
  </sect1> <!-- basics-entry1 -->

  <sect1 id="basics-running-gnucash">
    <title>Running <application>&app;</application></title>
    <para><application>&app;</application> can be run from your desktop main menu by selecting the associated menu entry.</para>
    <para>Alternatively it can be run from a command line prompt with the command <command>gnucash</command>.</para>

    <para>During start up, <application>&app;</application> will display the
    Splash Screen, where some information about the program (version number, build, etc.)
    and the loading process are displayed.</para>

    <sect2 id="basics-welcome-to-gnucash">
    <title><guilabel>Welcome to &app;</guilabel> dialog</title>
    <para>The very first time you open <application>&app;</application>, you will see the
    <guilabel>Welcome to &app;!</guilabel> screen. This dialog includes three choices:</para>
	<!-- Recommend screen shot here of Welcome to GnuCash! dialog -->

      <itemizedlist id="welcome-screen-options">
        <listitem>
          <para><guilabel>Create a new set of accounts</guilabel> - Runs the
          <guilabel>New Account Hierarchy Setup</guilabel> assistant (see <xref linkend="basics-acct-hierarchy"/>). Select
          this option if you want to be assisted in creating a set of accounts.</para>
        </listitem>

        <listitem>
          <para><guilabel>Import my QIF files</guilabel> - Runs the
          <guilabel>Import QIF Files</guilabel> assistant (see <xref linkend="importing-qif"/>). Select this option
          if you already have Quicken files (<filename>.qif</filename> files) and wish 
		  to import them into <application>&app;</application>.</para>
        </listitem>

        <listitem>
            <para><guilabel>Open the new user tutorial</guilabel> - 
            Opens the <application>&app;</application> Tutorial and Concepts Guide. Select this
            option if you are completely new to <application>&app;</application> and
            accounting concepts.</para>
        </listitem>
      </itemizedlist>

      <note>
        <para>It is possible to access each of these items after you have left this screen,
        but the <guilabel>Welcome to &app;!</guilabel> screen will not reappear.
        To create a new set of accounts, see <xref linkend="basics-acct-hierarchy" />. To import
		QIF files, see <xref linkend="importing-qif" />.</para>
      </note>
    </sect2>

    <sect2 id="basics-acct-hierarchy">
      <title>New Account Hierarchy Setup</title>

      <para>The <emphasis>New Account Hierarchy Setup</emphasis> assistant helps you 
	  to create a set of <application>&app;</application> accounts. It will
      appear if you choose <guibutton>Create a new set of accounts</guibutton>
      in the <guilabel>Welcome to &app;!</guilabel> menu, or when you select 
	  <menuchoice><guimenu>File</guimenu><guimenuitem>New</guimenuitem></menuchoice>.</para>
      <para>This assistant will create a new blank <application>&app;</application> file and
	  guide you through the creation of a <emphasis>Chart of Accounts</emphasis>. There are several
	  steps in the assistant, which are outlined below.</para>

	  <orderedlist>
		  <listitem>
			  <para>The first screen briefly describes what this assistant does. </para>
		  </listitem>
		  <listitem>
			  <para><guilabel>New Book Options</guilabel> allows you to set different attributes 
			  for your file that affect the file as a whole. This screen has four tabs: 
			  Accounts, Budgeting, Business, and Counters. These items are explained elsewhere in
			  the Guide, and can be changed at a later point.</para>
		  </listitem>
		  <listitem>
			  <para><guilabel>Choose Currency</guilabel> sets the default currency for new accounts.
			  This is based on the computer locale settings, and can be modified later in the 
			  <guilabel>Accounts</guilabel> tab under <guilabel>Preferences</guilabel> 
			  (see <xref linkend="configuring-preferences-accounts"/>).</para>
		  </listitem>
		  <listitem>
			  <para><guilabel>Choose accounts to create</guilabel> allows you to create
			  an initial set of accounts. These can be edited as needed afterward. 
			  The screen is divided into three parts.</para>
			  <itemizedlist>
				  <listitem>
					  <para>The left upper portion has a list of
						  <guilabel>Categories</guilabel> for commonly used hierarchies of
						  accounts. Select from this list the types of accounts you wish to
						  use. You can select as many of the categories of accounts as you
						  wish.</para>
				  </listitem>
				  <listitem>
					  <para>The left lower section has a <guilabel>Category
						  Description</guilabel> that displays a detailed description of the
						  category currently highlighted.</para>
				  </listitem>
				  <listitem>
					  <para>The right side has a list of the <guilabel>Accounts</guilabel>
					  that will be created from a selected category. Note that the accounts
					  listed here are <emphasis>only</emphasis> the selected category; your
					  final data file will include <emphasis>all</emphasis> of the accounts
					  for all of the selected Categories.</para>
				  </listitem>
			  </itemizedlist>
		  </listitem>
		  <listitem>
			  <para><guilabel>Setup selected accounts</guilabel> lists all the accounts you
			  selected on <guilabel>Choose accounts to create</guilabel>, and allows you to
			  enter opening balances and to designate <emphasis>Placeholder</emphasis> accounts.</para>
			  <note>
				  <para>Equity accounts do not have opening balances, so the
					  opening balance value for this kind of account
					  is locked and set to zero.</para>
			  </note>
			  <note id="placeholder-acct">
				  <para><emphasis>Placeholder</emphasis> accounts are used to create a hierarchy of accounts and
				  normally do not have transactions or opening balances.</para>
			  </note>
			  <itemizedlist>
				  <listitem>
					  <para>The left side of the screen has a list of <guilabel>Account
					  Names</guilabel>. Select an account by "clicking" once in the
					  <guilabel>Account Names</guilabel> column with the account highlighted. This will open
					  the account name for changes.</para>
				  </listitem>
				  <listitem>
					  <para>The right side of the screen has a check-box to make an
					  account a <guilabel>Placeholder</guilabel> and a box to add the
					  <guilabel>Opening Balance</guilabel> for the selected account. Again
					  a single click in the <guilabel>Opening Balance</guilabel> or
					  <guilabel>Placeholder</guilabel> column will
					  open the field for changes.</para>
				  </listitem>
			  </itemizedlist>
		  </listitem>
		  <listitem>
			  <para><guilabel>Finish account setup</guilabel> is the last screen and
			  gives you a final option to cancel the process.</para>
			  <warning>
				  <para>If you choose to cancel, any selections you have made up to
				  this point will be lost.</para>
			  </warning>
		  </listitem>
	  </orderedlist>
    </sect2>

    <sect2 id="basics-tip2">
      <title>Tip of the Day</title>

      <para><application>&app;</application> provides a <guilabel>Tip of the Day</guilabel> screen to
      give helpful hints for using the program:</para>

      <screenshot id="basics-TipOfDay">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/basics_TipOfDay.png" format="PNG"
                       srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The Tip of the Day</phrase>
          </textobject>

          <caption>
            <para>This image shows the <guilabel>Tip of the
            Day</guilabel>.</para>
          </caption>
        </mediaobject>
      </screenshot>

      <para>These tips provide useful information for beginning users. To view
      more of the tips, click <guibutton>Forward</guibutton> to continue. If you
      do not wish to see this screen box on start-up, deselect the box next to
      <guilabel>Show tips at startup</guilabel>. When you have
      finished viewing the helpful tips, click <guibutton>Close</guibutton> to
      close the <guilabel>Tip of the Day</guilabel> screen.</para>
    </sect2>

    <sect2 id="basics-main2">
      <title>Account Tree Window</title>

      <para>You should now see the <guilabel>Accounts</guilabel> window, which
      appears as shown below. The exact layout of the account tree will depend
      on which default accounts you selected during the New Account Hierarchy
      Setup. In this example, the <guilabel>Common Accounts</guilabel> are shown.</para>

      <screenshot id="basics-Accounts">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/basics_Accounts.png" format="PNG"
                       srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The Account Tree Window</phrase>
          </textobject>

          <caption>
            <para>This image shows the <guilabel>Accounts</guilabel>
            window.</para>
          </caption>
        </mediaobject>
      </screenshot>

      <para>The Account Tree window (also known as a Chart of Accounts, or CoA) provides an overview of the data contained
      in the current file. It contains a list of account names and their
      current balances.</para>
      <para>From this window, you can open the register of any
      account either by double-clicking the account name, right clicking the account name and selecting <guilabel>Open Account</guilabel> from the
      menu, or by using the <guibutton>Open</guibutton> button on the toolbar. <application>&app;</application> allows you to have as many account registers open as you wish. For more information on using account registers, see <xref linkend="basics-register2" />.</para>

      <tip>
        <para>Clicking the small triangle to the left of an account that has children will expand the tree view showing child accounts.</para>
      </tip>

      <para>At the top of this window is the <emphasis>Titlebar</emphasis>, which displays the
      file name for this set of accounts (once you have saved the file.) Below that is the <emphasis>Menubar</emphasis>.
      You can access the menu options by either clicking on these menu
      headings or by using shortcuts and access keys (see <xref linkend="basics-shortcut2" />).
      Next is the <emphasis>Toolbar</emphasis>, which contains buttons
      for the most common functions.</para>

      <para>The account tree appears below the <emphasis>Toolbar</emphasis>. Once you have
      started creating accounts, the account names will appear in the account
      tree. You can customize which headings show up by using the
      small <guiicon>down-arrow</guiicon> at the far right just above the account tree.</para>

      <para>At the bottom is the <emphasis>Statusbar</emphasis>, which tells you
      information about what you own (Net Assets) and how much money you have
      made (Profits).</para>


    </sect2>

    <sect2 id="basics-register2">
      <title>Account Register Window</title>

      <para>Account Register windows are used to enter and edit your
      account data. As the name suggests, they look similar to a checkbook
      register.</para>

      <screenshot id="basics-CheckAccount">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_CheckAccount.png" format="PNG"
                       srccredit="Bengt Thuree" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_CheckAccount.png" format="PNG"
                       srccredit="Bengt Thuree" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The Checking Account Register</phrase>
          </textobject>

          <caption>
            <para>This image shows the <guilabel>Checking Account - Register
            </guilabel> with several transactions.</para>
          </caption>
        </mediaobject>
      </screenshot>

      <para><xref linkend="chapter_txns"></xref> explains more about account
      register windows and how to
      enter data into them. For now, note that the parts of an account
      register window are similar to the parts of the account tree window
      described earlier. The <emphasis>Titlebar</emphasis> at the top contains the account name.
      Below that, the <emphasis>Menubar</emphasis> contains menu options related to the account
      register. <emphasis>Toolbar</emphasis> buttons simplify common data entry functions. The
      <emphasis>Statusbar</emphasis> at the bottom of the window, displays some account balances
      covered in <xref linkend="chapter_txns"></xref>. At the bottom of the
      account register window,
      information appears about the current location of the cursor.</para>

      <note>
      <para>In the register windows, you can resize the various columns that
        <application>&app;</application> displays, <emphasis>but keep in mind that
        the Description and Balance columns behave differently from other columns</emphasis>.</para>
      <para>The <guilabel>Description</guilabel> column is designed to expand
          automatically to fill all unused horizontal screen space.
          Therefore you should set the widths of all your other columns before
         setting the Description column width.</para>
      <para>The <guilabel>Balance</guilabel> column must be resized by
          double-clicking on the column heading.</para>
      </note>

    </sect2>

    <sect2 id="basics-toolbar2">
      <title>Toolbar Buttons</title>

      <para>Both the account tree window and the account register window
      contain <emphasis>Toolbar</emphasis> buttons. These buttons provide quick access to common
      functions such as <guibutton>Save</guibutton> and
      <guibutton>Open</guibutton> in the account tree window and
      <guibutton>Record</guibutton> and <guibutton>Delete</guibutton> in the
      account register window. If you are not sure what a button does, move
      the mouse pointer over that button, and you should see a description of
      the function appear.</para>

      <para>Here is a summary of the account tree window buttons:</para>

      <variablelist>
      <title>Account tree window buttons</title>
        <varlistentry>
        <term><guibutton>Save</guibutton></term>
        <listitem>
          <para>Save the current file to disk</para>
        </listitem>
        </varlistentry>

        <varlistentry>
        <term><guibutton>Close</guibutton></term>
        <listitem>
          <para>Close the current notebook page</para>
        </listitem>
        </varlistentry>

        <varlistentry>
        <term><guibutton>Open</guibutton>, <guibutton>Edit</guibutton>,
          <guibutton>New</guibutton> and <guibutton>Delete</guibutton></term>
        <listitem>
          <para>These are functions related to accounts. They are discussed in
          <xref linkend="chapter_accts"></xref>.</para>
        </listitem>
        </varlistentry>
      </variablelist>

      <para>Register-specific buttons are discussed in <xref linkend="chapter_txns"></xref>.
      </para>
    </sect2>

    <sect2 id="basics-tabbar">
      <title>Tab Bar</title>

      <para><application>&app;</application> uses a tabbed model that allows you to open multiple account registers and reports simultaneously. Each open window (which can include account registers, reports, or Scheduled Transactions windows) is given a tab on this bar that you can click to view that window. Tabs can be configured in Preferences to appear along any side of the <application>&app;</application> window.</para>

    <para>To see the full name for a tab, hover the mouse pointer over an account window tab.</para>

    <para>If more screens are open than can be displayed across the screen, some tabs
        will not display.  You can move through all tabs by clicking the arrows on
        either end of the tab bar. A complete list of tabs can be viewed by
        right-clicking the Tab Bar and any tab can be selected by clicking it.</para>
    </sect2>

    <sect2 id="basics-options2">
      <title>Menu Items</title>

      <para>The account tree window and the account register window both
      contain menu headings in a <emphasis>Menubar</emphasis>. Clicking on a menu heading brings
      up the menu items for that heading.</para>

      <para>You can click on the account tree menu headings and then move the
      mouse pointer over the menu items to see what they do. As the pointer
      moves over a menu item, a description of the item appears in the lower
      left-hand corner of the window (inside the <emphasis>Statusbar</emphasis>). To select a menu item, click on
      it.</para>

      <para>You can also access the most common menu items in a window by
      right-clicking the mouse anywhere in that window. In the account tree
      window, this will bring up a list of account items. In the account
      register window, this will bring up a list of transaction items.</para>

      <para>Other ways of accessing menu items are through keyboard shortcuts
      and access keys, described next.</para> </sect2>

    <sect2 id="basics-shortcut2">
      <title>Menu Shortcuts</title>

      <para>All of the menu items have access keys which are
      marked by underlined characters in the menu names. Pressing the
      <keycap>Alt</keycap> key with the underlined character in the menu
      heading will bring up the menu items for that heading. Once the menu
      items are displayed, type the underlined character in the menu item to
      activate it. For example, typing <keycombo><keycap>Alt</keycap>
      <keycap>F</keycap></keycombo> in the main window brings up the <guimenu>File</guimenu>
      menu, then typing <keycap>S</keycap> will save the file.  Access keys
      are fixed and cannot be changed by users.</para>

      <para>Some of the more commonly used menu items also have shortcut keys
      that directly activate the command without having to traverse the menu
      structure.  These shortcuts typically use the <keycap>Ctrl</keycap>
      key, although they can use any key combination.  Menu shortcuts are
      displayed at the end of each menu item.</para>
    </sect2>
  </sect1>

  <sect1 id="basics-files1">
    <title>Storing your financial data</title>
	<sect2 id="basics-files1-overview">
		<title>Overview</title>
		
		<para><application>&app;</application> offers several formats for storing 
		your financial data. The default file storage format is <acronym>XML</acronym>, 
		while <acronym>SQL</acronym> storage is available in SQLite, MySQL, and PostgreSQL 
		formats. Users can choose a file format for new files from <menuchoice><guimenu>File</guimenu> 
		<guimenuitem>Save </guimenuitem></menuchoice> and for existing files from <menuchoice><guimenu>File</guimenu> 
		<guimenuitem>Save As...</guimenuitem></menuchoice> dialogs.</para>
		
		<para>The <acronym>XML</acronym> storage format is a text file that by default is compressed, 
		which is a preference that is set at <menuchoice><guimenu>Edit</guimenu> 
		<guimenuitem>Preferences</guimenuitem></menuchoice> <guilabel>General</guilabel> 
		<guilabel>Compress files</guilabel>. SQLite storage is also available, and stores 
		your data in a single file on your system, like the <acronym>XML</acronym> format. However,
		internally, an SQLite file is managed as a database. The MySQL and PostgreSQL storage options 
		require access to a MySQL or PostgreSQL database server and the installation of 
		additional database drivers on your machine.</para>
		
		<tip>
		<para>Users can change the format at any time by using <menuchoice><guimenu>File</guimenu> 
		<guimenuitem>Save As...</guimenuitem></menuchoice>. This will create a copy of 
		the data file in the selected format.</para>
		</tip>
	</sect2>

	<sect2 id="basics-files-storage-comparison">
		<title>Storage Comparison and Recommendations</title>
		<para>Each storage format has benefits and shortcomings that users should 
		consider for their needs and abilities. See the 
		<link linkend='basics-storage-comparison-table' endterm="basics-storage-comparison-tbltitle"/> below
		for further details.</para>
		
		<para>The <acronym>XML</acronym> format is the most stable and established, 
		and for this reason, it is recommended for most users. <acronym>SQL</acronym>
		storage was added for the 2.4 release and has become an increasingly popular 
		choice for users. The SQLite format allows users to realize the benefits of 
		<acronym>SQL</acronym> storage without the overhead of installing or managing 
		a full <acronym>DBMS</acronym>. MySQL and PostgreSQL require the installation 
		of MySQL and PostgreSQL <acronym>DBMS</acronym>, respectively, and are best 
		maintained only by experienced database administrators.</para>
			
		<note>
			<para>Use of a <acronym>SQL</acronym> back end for storage implies to many 
			that <application>&app;</application> has fully implemented <acronym>DBMS</acronym> 
			features, including multi-user and incremental data manipulation.  However, 
			<application>&app;</application> does not currently implement these features, 
			although it is a long term goal of the development team. </para>
		</note>
	</sect2>
	<sect2 id="basics-storage-comparison-tblsect">
		<title>Storage Comparison Table</title>
		<table frame="topbot" id="basics-storage-comparison-table">
			<title id="basics-storage-comparison-tbltitle">Storage Comparison</title>

			<tgroup align="left" cols="5">
				<colspec colname="c1item" ></colspec>
				<colspec colname="c2xml" ></colspec>
				<colspec colname="c3sqlite" ></colspec>
				<colspec colname="c4mysql" ></colspec>
				<colspec colname="c5pgsql" ></colspec>

            <thead>
              <row>
                <entry> </entry>
                <entry align="center">XML</entry>
                <entry align="center">SQLite</entry>
                <entry align="center">MySQL</entry>
                <entry align="center">PostgreSQL</entry>
              </row>
            </thead>

            <tbody>
            <row>
				<entry namest="c1item"                      >Availability</entry>
  				<entry align="center" namest="c2xml"        > Built-in </entry>
  				<entry align="center" namest="c3sqlite" nameend="c5pgsql" > Depends on packaging<footnote>
					<para>SQLite relies on an additional package and driver (called libdbi 
						and libdbd-sqlite3, respectively), which are installed by 
						default on Mac OS and Windows. Linux users may need to manually 
						install these for SQLite.</para>
					<para>MySQL and PostgreSQL may require the installation of additional software drivers 
						(libdbd-mysql and libdbd-pgsql).</para>
					</footnote>
				</entry>
			</row>

			<row>
				<entry namest="c1item"                      >File extension</entry>
  				<entry align="center" namest="c2xml" nameend="c3sqlite"       > gnucash </entry>
  				<entry align="center" namest="c4mysql" nameend="c5pgsql" > N/A<footnote>
					<para>MySQL and PostgreSQL place data within their own storage system.</para></footnote></entry>
			</row>

			<row>
                <entry namest="c1item"                      >Additional software</entry>
  				<entry align="center" namest="c2xml" nameend="c3sqlite" > None </entry>
  				<entry align="center" namest="c4mysql"      > MySQL </entry>
  				<entry align="center" namest="c5pgsql" > PostgreSQL </entry>
			</row>

			<row>
                <entry namest="c1item"                      >Additional expertise</entry>
  				<entry align="center" namest="c2xml" nameend="c3sqlite"  > None </entry>
  				<entry align="center" namest="c4mysql" nameend="c5pgsql" > Database Administrator </entry>
			</row>

			<row>
                <entry namest="c1item"                      >Compression</entry>
  				<entry align="center" namest="c2xml"        > gzip </entry>
  				<entry align="center" namest="c3sqlite" nameend="c5pgsql" > N/A </entry>
			</row>

			<row>
                <entry namest="c1item"                      >File Save</entry>
  				<entry align="center" namest="c2xml"        > On command </entry>
  				<entry align="center" namest="c3sqlite" nameend="c5pgsql" > On commit </entry>
			</row>

			<row>
                <entry namest="c1item"                      >Multi-user</entry>
  				<entry align="center" namest="c2xml"        > No </entry>
  				<entry align="center" namest="c3sqlite"     > No </entry>
  				<entry align="center" namest="c4mysql"      > No </entry>
  				<entry align="center" namest="c5pgsql" > No </entry>
			</row>
			</tbody>
		</tgroup>
		</table>
	</sect2>

    <sect2 id="basics-create-data">
    <title>Creating a file</title>
    <para>To create a new <application>&app;</application> file do the following:</para>

    <orderedlist>
      <listitem>
        <para>From the <application>&app;</application> <emphasis>Menubar</emphasis>, choose <menuchoice><guimenu>File</guimenu>
        <guimenuitem>New File</guimenuitem></menuchoice>. The <guilabel>New Account Hierarchy setup</guilabel>
        assistant will start.</para>
        <note>
          <para>If you are running <application>&app;</application> for the first time, you will be presented
          with the <guilabel>Welcome to &app;!</guilabel> screen. This screen is described in detail in the
          <application>&app;</application> manual.</para>
        </note>
      </listitem>

      <listitem>
        <para>Set your preferences in the assistant and move through the screens with the
        <guibutton>Forward</guibutton>, <guibutton>Cancel</guibutton> and <guibutton>Previous</guibutton>
        buttons.</para>
      </listitem>
    </orderedlist>

    </sect2>

    <sect2 id="basics-store-data">
    <title>Saving data</title>
    <para>Follow these steps to save the file under your preferred name:</para>

    <orderedlist>
      <listitem>
        <para>Choose <menuchoice><guimenu>File</guimenu> <guimenuitem>Save
        As...</guimenuitem></menuchoice> from the <emphasis>Menubar</emphasis> or select the
        <guibutton>Save</guibutton> <emphasis>Toolbar</emphasis> button. <application>&app;</application> will bring
        up the save window.</para>
      </listitem>

      <listitem>
        <para>Select the <guilabel>Data Format</guilabel> of the file you are saving from the
        drop down list. The default selection is <acronym>XML</acronym> but if you have set up a
        database back end you can change to that format.</para>
        <para>Depending on the selected <guilabel>Data Format</guilabel> the window can change as
        described in the following.</para>
      </listitem>

      <listitem>
      <para></para>
        <itemizedlist>
          <listitem>
            <para>If you selected <acronym>XML</acronym> or <acronym>sqlite3</acronym> you will see a screen like this:</para>

        <figure>
        <title>Save screen when <acronym>XML</acronym> or <acronym>sqlite3</acronym> is selected.</title>
        <screenshot id="basics-SaveXML">
          <mediaobject>
            <imageobject role="html">
              <imagedata fileref="figures/basics_SaveXML.png" format="PNG"
                         srccredit="Cristian Marchi" width="510px"></imagedata>
            </imageobject>

            <imageobject role="fo">
              <imagedata fileref="figures/basics_SaveXML.png" format="PNG"
                         srccredit="Cristian Marchi"></imagedata>
            </imageobject>

            <textobject>
              <phrase>The Save screen</phrase>
            </textobject>

            <caption>
              <para>This image shows the <guilabel>Save</guilabel> screen when the selected
              <guilabel>Data Format</guilabel> is <acronym>XML</acronym> or <acronym>sqlite3</acronym>.</para>
            </caption>
          </mediaobject>
        </screenshot>
        </figure>

            <para>Type your chosen filename in the <guilabel>Name</guilabel> field. It is not necessary to specify an
            extension when you write the file name. <application>&app;</application> will automatically add the extension
            <filename>.gnucash</filename> to the file.</para>
            <note>
              <para>The <filename>.gnucash</filename> extension was introduced in the 2.3 series of <application>&app;</application>.
              For already existing files, the extension will never be changed. So if you open an existing file named
              <filename>Myoldfile</filename>, that name won&rsquo;t be changed if the file is saved. You might use the
              <guimenuitem>Save As...</guimenuitem> command and give the file a new name in order to have it saved with the
              extension <filename>.gnucash</filename>.</para>
            </note>
            <para>Select the path where the file will be saved by browsing the tree in the lower panes.</para>
            <tip>
              <para>Click on the <guibutton>Create Folder</guibutton> button to create a new folder with a
              custom name in the selected path.</para>
            </tip>
          </listitem>

          <listitem>
            <para>If you selected <acronym>mysql</acronym> or <acronym>postgres</acronym>
            <guilabel>Data Format</guilabel> you will see a screen like this:</para>

            <figure>
            <title>Save screen when <acronym>mysql</acronym> or <acronym>postgres</acronym> is selected.</title>
            <screenshot id="basics-SaveSQL">
              <mediaobject>
                <imageobject role="html">
                  <imagedata fileref="figures/basics_SaveSQL.png" format="PNG"
                             srccredit="Marchi Cristian" width="510px"></imagedata>
                </imageobject>

                <imageobject role="fo">
                  <imagedata fileref="figures/basics_SaveSQL.png" format="PNG"
                             srccredit="Cristian Marchi"></imagedata>
                </imageobject>

                <textobject>
                  <phrase>The Save screen</phrase>
                </textobject>

                <caption>
                  <para>This image shows the <guilabel>Save</guilabel> screen when the selected
                  <guilabel>Data Format</guilabel> is <acronym>mysql</acronym> or <acronym>postgres</acronym>.</para>
                </caption>
              </mediaobject>
            </screenshot>
            </figure>

            <para>Enter in this window the <guilabel>Database Connection</guilabel> information:
            <guilabel>Host</guilabel>, <guilabel>Database</guilabel>, <guilabel>Username</guilabel>
            and <guilabel>Password</guilabel>.</para>
            <warning>
              <para>Saving to <acronym>mysql</acronym> or <acronym>postgres</acronym> requires the proper permissions in that
              database, that is you need to have the permissions to create a new database with the given database name, or
              you need to have write access to an existing database with the given database name.</para>
            </warning>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Click the <guibutton>Save As</guibutton> button to save the
        file.</para>
      </listitem>
    </orderedlist>

    <para>If you are keeping track of finances for a single household, you
    need only one file. But if you are also tracking business finances or want
    to keep data separate for some reason, then you will need more than one
    file.</para>

    <para>Before ending each <application>&app;</application> session, be sure to save your data
    changes using <menuchoice><guimenu>File</guimenu>
    <guimenuitem>Save</guimenuitem></menuchoice> or the <guibutton>Save</guibutton> <emphasis>Toolbar</emphasis>
    button.
    <note>
        <para>As it is very important to save your data frequently to avoid losing them for whatever reason,
        <application>&app;</application> is able to automatically save the opened file every a certain amount of time.
        This interval can be set in the <guilabel>General</guilabel> tab under
        <menuchoice><guimenu>Edit</guimenu><guimenuitem>Preferences</guimenuitem></menuchoice>
        (<menuchoice><guimenu>GnuCash</guimenu><guimenuitem>Preferences</guimenuitem></menuchoice> on MacOS).
        Keep in mind that this option is relevant only if you are saving in <acronym>XML</acronym> format.
        If you are working with a database, the <guibutton>Save</guibutton> button and the <guimenuitem>Save</guimenuitem>
        menu entry will be grayed out because changes are stored right away.</para>
    </note>
    </para>
    </sect2>

    <sect2 id="basics-open-data">
    <title>Opening data</title>
    <para>To open an existing file or database, select <menuchoice><guimenu>File</guimenu>
    <guimenuitem>Open</guimenuitem></menuchoice> from the menu. In the window that will open,
    select the <guilabel>Data Format</guilabel>. If you selected <guilabel>File</guilabel> choose the file you want to open
    by browsing the folders in the lower panes. Else, enter the required <guilabel>Database Connection</guilabel>
    information.</para>
    <tip>
      <para><application>&app;</application> keeps a list of the recently opened files. Open the <guilabel>File</guilabel>
      menu and you will see listed the names of recently opened files. Click on the one you want to load to open it.</para>
    </tip>
    </sect2>

    <sect2 id="basics-expt-acct">
    <title>Duplicating an Account Hierarchy</title>
    <para>In some cases, it might be useful to duplicate the structure of an existing data file in a new file.
    For example, you might want to try out new accounting techniques without corrupting your actual
    accounting data, or you might need to follow accounting guidelines that require you to close your books at the end
    of the year and begin each year with a fresh set of books.</para>

    <para><application>&app;</application> allows you to create an empty copy of your Chart of Accounts simply by selecting
    <menuchoice><guimenu>File</guimenu><guisubmenu>Export</guisubmenu><guimenuitem>Export Accounts</guimenuitem></menuchoice>.
    When you select this command, you are asked to provide the name for the new empty file, and <application>&app;</application>
    creates a new data file that contains only your account hierarchy (that is, there is no transaction data).
    Once saved, the new file can be opened like any other <application>&app;</application> data file as described above.</para>
    </sect2>

  </sect1>

  <sect1 id="basics-backup1">
    <title>Backing Up and Recovering Data</title>

    <para><application>&app;</application> creates several types of files to help ensure that your data
    is not lost. If you look in the folder where your saved file resides, you may see other
    files generated by <application>&app;</application> with the following extensions: <filename>.gnucash</filename>,
    <filename>.log</filename>, <filename>.LCK</filename>, <filename>.LNK</filename> in the same directory
    as your primary data file. What each of these files does is presented below.</para>

    <note>
    <para>The following sections are relevant only if you are saving your financial data in the <acronym>XML</acronym> format</para>
    </note>

    <programlisting>
      $ ls
      myfile.gnucash
      myfile.gnucash.20100414185747.gnucash
      myfile.gnucash.20100414223248.log
      myfile.gnucash.20100415114340.gnucash
      myfile.gnucash.20100415154508.log
      myfile.gnucash.20100415173322.gnucash
      myfile.gnucash.20100415194251.log
      myfile.gnucash.7f0982.12093.LNK
      myfile.gnucash.LCK
    </programlisting>

    <sect2 id="basics-backupxac2">
      <title>Backup file (.gnucash)</title>

      <para>Each time you save your data file, a backup copy will also be
      saved with the extension <filename>.YYYYMMDDHHMMSS.gnucash</filename>. This backup file is a complete copy of
      your previous data file, and the filename format refers to the data
      file, year, month, day and time of the backup. For example, the filename
      <filename>myfile.gnucash.20100414185747.gnucash</filename> indicates this is a
      backup copy of the file <filename>myfile</filename> saved in the year
      2010, April 14, at 6:57:47 p.m.</para>

      <para>To restore an old backup file, simply open the <filename>.YYYYMMDDHHMMSS.gnucash</filename> file with the
      date to which you wish to return. Be sure to save this file under a
      different name.</para>

      <note>
       <para>
         <filename>.YYYYMMDDHHMMSS.xac</filename> instead of the actual extension <filename>.YYYYMMDDHHMMSS.gnucash</filename>.
         So if you upgrade from the 2.2 series to the 2.4 series, you may end up with both <filename>.YYYYMMDDHHMMSS.xac</filename>
         and <filename>.YYYYMMDDHHMMSS.gnucash</filename> backup files in your directory.</para>
      </note>
    </sect2>

    <sect2 id="basics-backuplog2">
      <title>Log file (.log)</title>

      <para>Each time you open and edit a file in <application>&app;</application>,
      <application>&app;</application> creates a log file of changes you have made to your data file.
      The log file uses a similar naming format as the backup files:
      <filename>.YYYYMMDDHHMMSS.log</filename>. Log files
      are not a full backup of your data file - they simply record changes you
      have made to the data file in the current <application>&app;</application> session.</para>

      <para>In case you exit <application>&app;</application> inadvertently, possibly due to a power
      outage or a system wide crash, it is possible to recover most of your
      work since the last time you saved your <application>&app;</application> file using this log
      file. This is the procedure:</para>

      <orderedlist>
        <listitem>
          <para>Open the last saved <application>&app;</application> file.</para>
        </listitem>

        <listitem>
          <para>Go to <menuchoice><guimenu>File</guimenu><guisubmenu>Import</guisubmenu>
          <guimenuitem>Replay &app; .log file</guimenuitem></menuchoice>
          and select the one .log file with the same date as the saved file
          you just opened. Make sure that you picked the right .log file, or
          you will possibly wreak havoc in your accounts.</para>
        </listitem>
      </orderedlist>

      <para>Log replaying will recover any transaction affecting the balance
      entered since the last save, including those created from scheduled
      transactions and business features (invoices, bills, etc.).</para>

      <warning>
        <para>Changes to the scheduled transactions, invoices or
        bills themselves are NOT recovered, and their transactions that were
        recovered may not be properly associated with them, and should thus be
        double-checked. Especially for business transactions, you may have to
        delete and re-create some of them. If you do not, although the balance
        will be correct, some reports may not.</para>
      </warning>
    </sect2>

    <sect2 id="basics-backuplock2">
      <title>Lock files (.LNK and .LCK)</title>

      <para>You may occasionally see <filename>.LNK</filename> and <filename>.LCK</filename> files appear. These do not
      store any data, but they are created to prevent more than one user from
      opening the same file at the same time. These files are automatically
      created when you open the file, to lock it so no one else can access it.
      When you close your <application>&app;</application> session or open another file, <application>&app;</application>
      unlocks the first data file by deleting the <filename>.LCK</filename> and <filename>.LNK</filename> files.</para>

      <para>If <application>&app;</application> crashes while you have a data file open, the <filename>.LCK</filename> and
      <filename>.LNK</filename> files are not deleted. The next time you try to open <application>&app;</application>, you
      will get a warning message that the file is locked. The warning message
      appears because the <filename>.LNK</filename> and <filename>.LCK</filename> files are still in your directory. It is
      safe to choose <guibutton>Yes</guibutton> to open the file, but you should delete the <filename>.LNK</filename> and
      <filename>.LCK</filename> files (using a terminal window or your file manager). Once those
      files are deleted, you will not get the warning message again unless
      <application>&app;</application> crashes.</para>
    </sect2>

    <sect2 id="basics-backupmanage2">
      <title>File Management</title>

      <para>So which files should you keep around? Keep your main data file,
      of course. It&rsquo;s a
      good idea to keep some of the more recent <filename>.YYYYMMDDHHMMSS.gnucash</filename> backup files, but you can safely
      delete the <filename>.log</filename> files since they are not complete copies of your data.</para>

      <note>
        <para>If you upgraded from a <application>&app;</application> version prior to 2.4, you may also have backup files
        in the old <filename>.xac</filename> format. For these files you can apply the same principle described above for
        <filename>.YYYYMMDDHHMMSS.gnucash</filename> backup files.</para>
      </note>

      <para>You should also delete any <filename>.LCK</filename> and <filename>.LNK</filename> files that you see after
      closing <application>&app;</application>. If you decide to back up your data file to another
      disk manually, it&rsquo;s enough to back up the main data file - not the <filename>.YYYYMMDDHHMMSS.gnucash</filename>
      backup files.</para>

      <note>
        <para>By default <application>&app;</application> will automatically delete any <filename>.log</filename> and <filename>.YYYYMMDDHHMMSS.gnucash</filename>
        backup files that are older than 30 days. You can change this behavior in the <application>&app;</application>
        preferences in the <guilabel>General</guilabel> tab under <menuchoice><guimenu>Edit</guimenu>
        <guimenuitem>Preferences</guimenuitem></menuchoice>
        (<menuchoice><guimenu>GnuCash</guimenu><guimenuitem>Preferences</guimenuitem></menuchoice> on MacOS).</para>
      </note>

    </sect2>
  </sect1>

  <sect1 id="basics-migrate-settings">
    <title>Migrating <application>&app;</application> data</title>
      <para>Sometimes you may need to move your financial data and <application>&app;</application> settings to another machine.
      Typical use cases are when you buy a new computer or if you want to use the same settings over two different operating
      systems in a dual boot configuration.</para>

   <sect2 id="migrate-financial">
     <title>Migrating financial data</title>
     <para>Migrating <application>&app;</application> financial data is a as simple as copying  <filename>.gnucash</filename>
     files with a file manager if you know where they are saved. If you can&rsquo;t remember where a file is stored
     but you can open it directly within <application>&app;</application>, save it in the desired path from within
     <application>&app;</application>.</para>

     <para>All other files in the folder are either backups or log files. It won&rsquo;t do any harm to copy them too, but it&rsquo;s not likely
     to do any good, either.</para>
   </sect2>

   <sect2 id="migrate-prefs">
     <title>Migrating preferences data</title>
     <para>Preferences are stored in three different locations: one for <application>&app;</application> preferences,
     one for reports, and one for online banking settings. Preferences are managed by
     <application>gsettings</application>, reports are managed by <application>&app;</application>
     itself, and online banking is managed by <application>aqbanking</application>. If you do not use online banking,
     then you will not have this folder on your machine.</para>
     <para>Where the <application>&app;</application> preferences are stored varies
     depending on your operating system (see <xref linkend="App-sett-loc" />, <xref linkend="Report-loc" />, and
     <xref linkend="OB-sett-loc" />). To back up and transfer your entire installation, you must copy
     these preferences as well.</para>


	<table id="App-sett-loc"><title>Application Settings Locations</title>
	<tgroup cols="2" align="left">
  	  <thead>
	    <row>
  		<entry>Operating system</entry>
		<entry>folder</entry>
	    </row>
	  </thead>
	  <tbody>
            <row>
     	      <entry>Unix</entry>
     	      <entry><application>&app;</application> preferences are stored in <application>dconf</application>.
                  You can use the commands <code>dconf dump /org/gnucash/</code> on the old machine
                  and <code>dconf load /org/gnucash/</code> on the new machine to migrate your preferences.</entry>
            </row>
            <row>
              <entry>Mac OSX</entry>
              <entry><filename class="directory">~/Library/Preferences/gnucash.plist</filename></entry>
            </row>
            <row>
              <entry>Windows</entry>
              <entry>The preferences are stored in the Windows registry<filename class="directory">HKEY_CURRENT_USER/software/GSettings</filename></entry>
            </row>
	  </tbody>
	</tgroup>
	</table>

        <table id="Report-loc"><title>Saved Reports Locations</title>
	<tgroup cols="2" align="left">
  	  <thead>
	    <row>
  		<entry>Operating system</entry>
		<entry>folder</entry>
	    </row>
	  </thead>
	  <tbody>
            <row>
     	      <entry>Unix</entry>
              <entry><filename class="directory">~/.gnucash</filename></entry>
            </row>
            <row>
              <entry>Mac OSX</entry>
              <entry><filename class="directory">~/Library/Application Support/gnucash</filename></entry>
            </row>
            <row>
              <entry>Windows</entry>
              <entry><filename class="directory">Documents and Settings/Username/.gnucash</filename> or
                     <filename class="directory">Users/Username/.gnucash</filename></entry>
            </row>
	  </tbody>
	</tgroup>
	</table>


	<table id="OB-sett-loc"><title>Online Banking Settings Locations</title>
	<tgroup cols="2" align="left">
  	  <thead>
	    <row>
  		<entry>Operating system</entry>
		<entry>folder</entry>
	    </row>
	  </thead>
	  <tbody>
            <row>
     	      <entry>Unix</entry>
              <entry><filename class="directory">~/.aqbanking</filename></entry>
            </row>
            <row>
              <entry>Mac OSX</entry>
              <entry><filename class="directory">~/.aqbanking</filename></entry>
            </row>
            <row>
              <entry>Windows</entry>
              <entry><filename class="directory">Documents and Settings/Username/.aqbanking</filename></entry>
            </row>
	  </tbody>
	</tgroup>
	</table>

     <note>
       <para>On Unix and Mac OSX, these folders will generally not
       display in the file manager. You must set the file manager to show hidden files
       and folders to see them.</para>
     </note>

     <tip>
       <para>On Unix and Mac OSX, the <keycap>~</keycap> symbol means the
       <filename class="directory">home</filename> folder.</para>
     </tip>

   </sect2>

  </sect1>

  <sect1 id="basics-together1">
    <title>Putting It All Together</title>

    <note>
      <para>This section begins a tutorial that will continue throughout this
      book. At the end of each chapter, you will see a <guilabel>Putting It
      All Together</guilabel> section that walks you through examples to
      illustrate concepts discussed in that section. Each <guilabel>Putting It
      All Together</guilabel> section builds on the previous one, so be sure
      to save your file for easy access.</para>
    </note>

    <para>Let&rsquo;s get started!</para>

    <orderedlist>
      <listitem>
        <para>First, let&rsquo;s create a file to store your real data. Open <application>&app;</application>
        and select <menuchoice><guimenu>File</guimenu><guimenuitem>New File</guimenuitem></menuchoice>
        from the <emphasis>Menubar</emphasis>. This will start the <guilabel>New Account Hierarchy Setup</guilabel> assistant that allows
        you to create several accounts at once.</para>
        <note>
          <para>If you are running <application>&app;</application> for the first time, you will be presented with the
          <guilabel>Cannot find default values</guilabel> screen which is described in details in the
          <application>&app;</application> manual.</para>
        </note>

      <screenshot id="basics-NewAccountHierarchySetup">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup.png"
                       format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup.png"
                       format="PNG" srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Account Hierarchy Setup assistant</phrase>
          </textobject>

          <caption>
            <para>This image shows the first screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant.</para>
          </caption>
        </mediaobject>
      </screenshot>

      <para>The first screen of the assistant gives you a description of what the assistant does.
      Click the <guibutton>Forward</guibutton> button to proceed to the next screen.</para>
    </listitem>

    <listitem>
      <para>In the second screen, select the currency to use for the new accounts from the dropdown list.
      Then press the <guibutton>Forward</guibutton> button.</para>
      <note>
        <para>The currency you select here, will be assigned to all the
        <guilabel>accounts</guilabel> created in this assistant.</para>
      </note>

      <screenshot id="basics-NewAccountHierarchySetup-currency">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_currency.png"
                       format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_currency.png"
                       format="PNG" srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Account Hierarchy Setup assistant - Currency</phrase>
          </textobject>

          <caption>
            <para>This image shows the second screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant where you select the
            currency.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </listitem>

    <listitem>
      <para>In the third screen, set the <guilabel>New Book Options</guilabel>,
        then press the <guibutton>Forward</guibutton> button.
        You can also update these options later using <menuchoice><guimenu>File
        </guimenu><guimenuitem>Properties</guimenuitem></menuchoice>.
        For details of these options, see the <application>&app;</application>
        Help manual, chapter Customizing GnuCash, Book Options.
      </para>

      <screenshot id="basics-NewBookOptions">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewBookOpts.png"
                       format="PNG" srccredit="Chris Good" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewBookOpts.png"
                       format="PNG" srccredit="Chris Good" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Book Options assistant</phrase>
          </textobject>

          <caption>
            <para>This image shows the third screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant where you select the
            book options.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </listitem>

    <listitem>
      <para>In the fourth screen select the <guilabel>Common Accounts</guilabel> group in the
      <guilabel>Categories</guilabel> pane. Then press the <guibutton>Forward</guibutton> button to
      proceed.</para>
      <note>
        <para>If you want, you can select one or more of the predefined account-groups here. For more
        information on account types, see <xref linkend="accts-types1"></xref>.</para>
      </note>

      <screenshot id="basics-NewAccountHierarchySetup-Accounts">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Accounts.png"
                       format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Accounts.png"
                       format="PNG" srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Account Hierarchy Setup assistant - Choose
            accounts</phrase>
          </textobject>

          <caption>
            <para>This image shows the fourth screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant where you choose the
            various accounts.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </listitem>

    <listitem>
      <para>In the fifth screen you will be able to set an <guilabel>Opening
      Balance</guilabel> on each of the accounts, as well as indicate if
      the account should be a <guilabel>Placeholder</guilabel>. As these features will be
      described in next chapters, leave all as configured by <application>&app;</application>
      and click <guibutton>Forward</guibutton> to open the last screen of the assistant.</para>

      <screenshot id="basics-NewAccountHierarchySetup-Setup.png">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Setup.png"
                       format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Setup.png"
                       format="PNG" srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Account Hierarchy Setup assistant - Configure</phrase>
          </textobject>

          <caption>
            <para>This image shows the fifth screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant where you can set
            <guilabel>Opening Balance</guilabel>.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </listitem>

    <listitem>
      <para>In the last screen of the assistant, click <guibutton>Apply</guibutton> to create all the accounts and
      leave the assistant.</para>

      <screenshot id="basics-NewAccountHierarchySetup-Finish">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Finish.png"
                       format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/basics_NewAccountHierarchySetup_Finish.png"
                       format="PNG" srccredit="Cristian Marchi" ></imagedata>
          </imageobject>

          <textobject>
            <phrase>The New Account Hierarchy Setup assistant - Finish</phrase>
          </textobject>

          <caption>
            <para>This image shows the last screen of the <guilabel>New
            Account Hierarchy Setup</guilabel> assistant.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </listitem>

    <listitem>
      <para>After pressing <guibutton>Apply</guibutton> in the previous window, you will be
      presented with the save dialog. Select the <acronym>XML</acronym> <guilabel>Data Format</guilabel>,
      <guilabel>Name</guilabel> the file as <filename>gcashdata_1</filename>, select the folder where to
      save the file (remember it as the data file will be used in the tutorials throughout this manual),
      and finally press the <guibutton>Save as</guibutton> button.</para>

        <para>Your main window should now look something like this:</para>

          <screenshot id="basics-EmptyAccounts">
            <mediaobject>
              <imageobject role="html">
                <imagedata fileref="figures/basics_EmptyAccounts.png"
                           format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="figures/basics_EmptyAccounts.png"
                           format="PNG" srccredit="Cristian Marchi" ></imagedata>
              </imageobject>

              <textobject>
                <phrase>The Main window showing the test file</phrase>
              </textobject>
            </mediaobject>
          </screenshot>
    </listitem>
  </orderedlist>
</sect1>
<sect1 id="chapter_accts">
  <title>Accounts</title>

  <para>This section discusses some useful concepts for organizing your
  accounts. Since <application>&app;</application> does not impose any specific account tree layout,
  you are free to design your account structure in any manner you wish.
  However, there are a few basic accounting concepts which you will probably
  want to follow when designing your accounts to maximize their
  utility.</para>

  <sect2 id="accts-concepts1">
    <title>Basic Accounting Concepts</title>

    <para>As we saw in the previous chapter, accounting is based on 5 basic
    account types: <guilabel>Assets</guilabel>,
    <guilabel>Liabilities</guilabel>, <guilabel>Equity</guilabel>,
    <guilabel>Income</guilabel> and <guilabel>Expenses</guilabel>. We will now
    expand on our understanding of these account types, and show how they are
    represented in <application>&app;</application>. But first, let&rsquo;s divide them into 2 groups, the
    balance sheet accounts and the income and expense accounts.
    As the name says the balance sheet accounts can be summarized in the
    balance of what you own and owe <emphasis>at a point in the time</emphasis>,
    while the income and expense accounts can be summarized in the Profit &amp; Loss report,
    which shows the <emphasis>change of values in a period of time</emphasis> like the economic year </para>

    <para>Let&rsquo;s have a quick look at the Accounting Equation (<emphasis>Assets
    - Liabilities = Equity + (Income - Expenses)</emphasis>) again as a
    reminder, before we go deeper into each account type.</para>

    <screenshot id="accts-AccountRelationships">
      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="figures/basics_AccountRelationships.png"
                     format="PNG" srccredit="Geert Janssens" ></imagedata>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="figures/basics_AccountRelationships.svg"
                     format="SVG" srccredit="Geert Janssens"
                     contentwidth="4in"></imagedata>
          </imageobject>
        <textobject>
          <phrase>The basic accounts relationships</phrase>
        </textobject>

        <caption>
          <para>A graphical view of the relationship between the 5 basic
          accounts. Net worth (equity) increases through income and decreases
          through expenses. The arrows represent the movement of value.</para>
        </caption>
      </mediaobject>
    </screenshot>

    <sect3 id="accts-bsa2">
      <title>Balance Sheet Accounts</title>

      <para>The three so-called <emphasis>Balance Sheet Accounts</emphasis>
      are <guilabel>Assets</guilabel>, <guilabel>Liabilities</guilabel>, and
      <guilabel>Equity</guilabel>. Balance Sheet Accounts are used to track
      the things you own or owe.</para>

      <para><guilabel>Assets</guilabel> is the group of things that you own.
      Your assets could include a car, cash, a house, stocks, or anything else
      that has convertible value. Convertible value means that theoretically
      you could sell the item for cash.</para>

      <para><guilabel>Liabilities</guilabel> is the group of things on which
      you owe money. Your liabilities could include a car loan, a student
      loan, a mortgage, your investment margin account, or anything else which
      you must pay back at some time.</para>

      <para><guilabel>Equity</guilabel> is the same as "net worth." It
      represents what is left over after you subtract your liabilities from
      your assets. It can be thought of as the portion of your assets that you
      own outright, without any debt.</para>
    </sect3>

    <sect3 id="accts-ie2">
      <title>Income and Expense Accounts</title>

      <para>The two <guilabel>Income and Expense Accounts</guilabel> are used
      to increase or decrease the value of your accounts. Thus, while the
      balance sheet accounts simply <emphasis>track</emphasis> the value of
      the things you own or owe, income and expense accounts allow you to
      <emphasis>change</emphasis> the value of these accounts.</para>

      <para><guilabel>Income</guilabel> is the payment you receive for your
      time, services you provide, or the use of your money. When you receive a
      paycheck, for example, that check is a payment for labor you provided to
      an employer. Other examples of income include commissions, tips,
      dividend income from stocks, and interest income from bank accounts.
      Income will always increase the value of your Assets and thus your
      Equity.</para>

      <para><guilabel>Expense</guilabel> refers to money you spend to purchase
      goods or services provided by someone else
      <emphasis>for early consumption</emphasis>. Examples of expenses are a
      meal at a restaurant, rent, groceries, gas for your car, or tickets to
      see a play. Expenses will always decrease your Equity. If you pay for
      the expense immediately, you will decrease your Assets, whereas if you
      pay for the expense on credit you increase your Liabilities.</para>
<!--
  Translators:
    Your language might have a generic term for 'income and expense'.
    Then you should introduce it here in a separate paragraph
    and replace 'income and expense' by it in the latter sections of this book.
-->
    </sect3>
  </sect2>

  <sect2 id="accts-types1">
    <title><application>&app;</application> Accounts</title>

    <para>This section will show how the <application>&app;</application> definition of an account fits
    into the view of the 5 basic accounting types.</para>

    <para>But first, let&rsquo;s begin with a definition of an
    <guilabel>account</guilabel> in <application>&app;</application>. A <application>&app;</application>
    <guilabel>account</guilabel> is an entity which contains other
    sub-accounts, or that contains <guilabel>transactions</guilabel>. Since an
    account can contain other accounts, you often see <guilabel>account
    trees</guilabel> in <application>&app;</application>, in which logically associated accounts are grouped
    together within a common parent account.</para>

    <para>A <application>&app;</application> account must have a unique name (that you assign) and one
    of the predefined <application>&app;</application> <quote>account types</quote>. There are a total of 12 account
    types in <application>&app;</application>. These 12 account types are based on the 5 basic
    accounting types; the reason there are more <application>&app;</application> account types than
    basic accounting types is that this allows <application>&app;</application> to perform specialized
    tracking and handling of certain accounts. There are 6 asset accounts
    (<emphasis>Cash</emphasis>, <emphasis>Bank</emphasis>,
    <emphasis>Stock</emphasis>, <emphasis>Mutual Fund</emphasis>,
    <emphasis>Accounts Receivable</emphasis>, and <emphasis>Other Assets</emphasis>),
    3 liability accounts (<emphasis>Credit Card</emphasis>,
    <emphasis>Accounts Payable</emphasis>, and <emphasis>Liability</emphasis>),
    1 equity account (<emphasis>Equity</emphasis>), 1 income account
    (<emphasis>Income</emphasis>), and 1 expense account
    (<emphasis>Expenses</emphasis>).</para>

    <para>These <application>&app;</application> account types are presented in more detail
    below.</para>

    <sect3 id="accts-gc-bsa2">
      <title>Balance Sheet Accounts</title>

      <para>The first balance sheet account we will examine is
      <emphasis>Assets</emphasis>, which, as you remember from the previous
      section, refers to things you own.</para>

      <para>To help you organize your asset accounts and to simplify
      transaction entry, <application>&app;</application> supports several types of asset
      accounts:</para>

      <orderedlist>
        <listitem>
          <para><guilabel>Cash</guilabel> Use this account to track the money
          you have on hand, in your wallet, in your piggy bank, under your
          mattress, or wherever you choose to keep it handy. This is the most
          <emphasis>liquid</emphasis>, or easily traded, type of asset.</para>
        </listitem>

        <listitem>
          <para><guilabel>Bank</guilabel> This account is used to track your
          cash balance that you keep in institutions such as banks, credit
          unions, savings and loan, or brokerage firms - wherever someone else
          safeguards your money. This is the second most
          <emphasis>liquid</emphasis> type of account, because you can easily
          convert it to cash on hand.</para>
        </listitem>

        <listitem>
          <para><guilabel>Stock</guilabel> Track your individual stocks and
          bonds using this type of account. The stock account&rsquo;s register
          provides extra columns for entering number of shares and price of
          your investment. With these types of assets, you may not be able to
          easily convert them to cash unless you can find a buyer, and you are
          not guaranteed to get the same amount of cash you paid for
          them.</para>
        </listitem>

        <listitem>
          <para><guilabel>Mutual Fund</guilabel> This is similar to the stock
          account, except that it is used to track funds. Its account register
          provides the same extra columns for entering share and price
          information. Funds represent ownership shares of a variety of
          investments, and like stocks they do not offer any guaranteed cash
          value.</para>

          <para><application>&app;</application> treats account types Stock and
            Mutual Fund the same.
          </para>

        </listitem>

        <listitem>
          <para><guilabel>Accounts Receivable</guilabel> (A/Receivable) This
          is typically a business use only account in which you place
          outstanding debts owed to you. It is considered an asset because you
          should be able to count on these funds arriving.</para>

          <para>Transactions involving an Accounts Receivable account should not be added,
            changed or deleted in any way other than by using
          </para>
          <itemizedlist>
            <listitem><para>post/unpost bill/invoice/voucher or</para>
            </listitem>
	    <listitem><para>process payment</para></listitem>
	  </itemizedlist>
	</listitem>

        <listitem>
          <para><guilabel>Asset</guilabel> No matter how diverse they
          are, <application>&app;</application> handles many other situations
          easily. The account type <quote>Asset</quote>, covers all assets not
          listed above.</para>

          <para><application>&app;</application> treats account types Cash,
            Bank and Asset the same.
          </para>

          <para>Accounts are repositories of information used to track or record
          the kinds of actions that occur related to the purpose for which the
          account is established.</para>

          <para>For businesses, activities being tracked and reported are
          frequently subdivided more finely than what has been considered thus
          far. For a more developed treatment of the possibilities, please read
          the descriptions presented in
          <xref linkend="chapter_other_assets"/> of this Guide.</para>

          <para>For personal finances a person can follow the business groupings
          or not, as they seem useful to the activities the person is tracking
          and to the kind of reporting that person needs to have to manage their
          financial assets. For additional information, consult
          <xref linkend="chapter_other_assets"/> of this Guide.</para>
        </listitem>
      </orderedlist>

      <para>The second balance sheet account is
      <emphasis>Liabilities</emphasis>, which as you recall, refers to what
      you owe, money you have borrowed and are obligated to pay back some day.
      These represent the rights of your lenders to obtain repayment from you.
      Tracking the liability balances lets you know how much debt you have at
      a given point in time.</para>

      <para><application>&app;</application> offers three liability account types:</para>

      <orderedlist>
        <listitem>
          <para><guilabel>Credit Card</guilabel> Use this to track your credit
          card receipts and reconcile your credit card statements. Credit
          cards represent a short-term loan that you are obligated to repay to
          the credit card company. This type of account can also be used for
          other short-term loans such as a line of credit from your
          bank.</para>
        </listitem>

        <listitem>
          <para><guilabel>Accounts Payable</guilabel> (A/Payable) This is
            typically a business use only account in which you place bills you
            have yet to pay.
          </para>

          <para>Transactions involving an Accounts Payable account should not be added,
            changed or deleted in any way other than by using
            <itemizedlist>
              <listitem><para>post/unpost bill/invoice/voucher or</para></listitem>
	      <listitem><para>process payment</para></listitem>
	    </itemizedlist>
	  </para>
          </listitem>

        <listitem>
          <para><guilabel>Liability</guilabel> Use this type of account for
          all other loans, generally larger long-term loans such as a mortgage
          or vehicle loan. This account can help you keep track of how much
          you owe and how much you have already repaid.</para>

          <para><application>&app;</application> treats account types Credit
            Card and Liability the same.
          </para>

        </listitem>
      </orderedlist>

      <tip>
        <para>Liabilities in accounting act in an opposite manner from assets:
        <emphasis>credits</emphasis> (right-column value entries) increase
        liability account balances and <emphasis>debits</emphasis>
        (left-column value entries) decrease them. (See note later in this
        chapter)</para>
      </tip>

      <para>The final balance sheet account is <emphasis>Equity</emphasis>,
      which is synonymous with <quote>net worth</quote>. It represents what is left over
      after you subtract your liabilities from your assets, so it is the
      portion of your assets that you own outright, without any debt. In
      <application>&app;</application>, use this type of account as the source of your opening bank
      balances, because these balances represent your beginning net
      worth.</para>

      <para>There is usually only a single <application>&app;</application> equity account, called naturally
      enough, <guilabel>Equity</guilabel>.
      For companies, cooperatives etc. you can create a subaccount for each partner.</para>

      <tip>
        <para>In equity accounts, credits increase account balances and debits
        decrease them. (See note later in this chapter)</para>
      </tip>

      <note>
        <para>The accounting equation that links balance-sheet accounts is
        Assets = Liabilities + Equity or rearranged Assets - Liabilities =
        Equity. So, in common terms, the <emphasis>things you own</emphasis>
        minus the <emphasis>things you owe</emphasis> equals your
        <emphasis>net worth</emphasis>.</para>
      </note>
    </sect3>

    <sect3 id="accts-gc-ie2">
      <title>Income and Expense Accounts</title>

      <para><emphasis>Income</emphasis> is the payment you receive for your
      time, services you provide, or the use of your money. In <application>&app;</application>, use an
      <guilabel>Income</guilabel> type account to track these.</para>

      <tip>
        <para>Credits increase income account balances and debits decrease
        them. As described in <xref linkend="basics-accounting1"></xref>,
        credits represent money transferred
        <emphasis>from</emphasis> an account. So in these special income
        accounts, when you transfer money <emphasis>from</emphasis> (credit)
        the income account to another account, the balance of the income
        account <emphasis>increases</emphasis>. For example, when you deposit
        a paycheck and record the transaction as a transfer from an income
        account to a bank account, the balances of both accounts
        increase.</para>
      </tip>

      <para><emphasis>Expenses</emphasis> refer to money you spend to purchase
      goods or services provided by someone else. In <application>&app;</application>, use an
      <guilabel>Expense</guilabel> type account to track your expenses.</para>

      <tip>
        <para>Debits increase expense account balances and credits decrease
        them. (See note later in this chapter.)</para>
      </tip>

      <note>
        <para>When you subtract total expenses from total income for a time
        period, you get net income. This net income is then added to the
        balance sheet as retained earnings, which is a type of
        <guilabel>Equity</guilabel> account.</para>
      </note>

      <para>Below are the standard <guilabel>Income</guilabel> and
      <guilabel>Expense</guilabel> accounts after selecting <guilabel>Common
      Accounts</guilabel> in the assistant for creating a new Account Hierarchy
      (<menuchoice><guimenu>Actions</guimenu><guimenuitem>New Account
      Hierarchy...</guimenuitem></menuchoice>).</para>

      <screenshot id="accts-DefaultIncomeAccounts">
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/accts_DefaultIncomeAccounts.png"
                         format="PNG" srccredit="Cristian Marchi"></imagedata>
            </imageobject>

            <textobject>
              <phrase>Default income accounts</phrase>
            </textobject>

            <caption>
              <para>This image shows the standard <emphasis>Income</emphasis>
              accounts</para>
            </caption>
          </mediaobject>
        </screenshot>
        <screenshot id="accts-DefaultExpenseAccounts">
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/accts_DefaultExpenseAccounts.png"
                         format="PNG" srccredit="Cristian Marchi" ></imagedata>
            </imageobject>

            <textobject>
              <phrase>Some default expense accounts</phrase>
            </textobject>

            <caption>
              <para>This image shows some standard <emphasis>Expenses</emphasis>
              accounts</para>
            </caption>
          </mediaobject>
        </screenshot>
    </sect3>

    <sect3 id="accts-other-types">
      <title>Other Account Types</title>

      <para>There are some special other account types.</para>

      <para><emphasis>Trading</emphasis> Multiple currency transactions have
        splits in <quote>Trading</quote> accounts to make the transaction
        balance in each currency as well as in total value. See
        <xref linkend="chapter_currency" /> for more information.
      </para>

      <para><emphasis>Money Market</emphasis> and <emphasis>Credit Line
        </emphasis>are used only in the OFX importer, apparently for
        completeness with the specification.
      </para>
    </sect3>

  </sect2>

  <sect2 id="accts-examples1">
    <title>Putting It All Together</title>

    <para>Let&rsquo;s go through the process of building a common personal finance
    <emphasis>chart of accounts</emphasis> using the information we have
    learned from this chapter. A chart of accounts is simply a new <application>&app;</application>
    file in which you group your accounts to track your finances. In building
    this chart of accounts, the first task is to divide the items you want to
    track into the basic account types of accounting. This is fairly simple,
    let&rsquo;s go through an example.</para>

    <sect3 id="accts-examples-situation2">
      <title>Simple Example</title>

      <para>Let us assume you have a checking and a savings account at a bank,
      and are employed and thus receive a paycheck. You have a credit card
      (Visa), and you pay monthly utilities in the form of rent, phone, and
      electricity. Naturally, you also need to buy groceries. For now, we will
      not worry about how much money you have in the bank, how much you owe on
      the credit card, etc. We want to simply build the framework for this
      chart of accounts.</para>

      <para>Your <guilabel>assets</guilabel> would be the bank savings and
      checking account. Your <guilabel>liabilities</guilabel> are the credit
      card. Your <guilabel>Equity</guilabel> would be the starting values of
      your bank accounts and credit card (we do not have those amounts yet,
      but we know they exist). You have <guilabel>income</guilabel> in the
      form of a salary, and <guilabel>expenses</guilabel> in the form of
      groceries, rent, electricity, phone, and taxes (Federal, Social
      Security, Medicare) on your salary.</para>
    </sect3>

    <sect3 id="accts-examples-toplevel2">
      <title>The Basic Top Level Accounts</title>

      <para>Now, you must decide how you want to group these accounts. Most
      likely, you want your <emphasis>Assets</emphasis> grouped together, your <emphasis>Liabilities</emphasis> grouped
      together, your <emphasis>Equity</emphasis> grouped together, your <emphasis>Income</emphasis> grouped together,
      and your <emphasis>Expenses</emphasis> grouped together. This is the most common way of
      building a <application>&app;</application> chart of accounts, and it is highly recommended that
      you always begin this way.</para>

      <para>Start with a clean <application>&app;</application> file by selecting
      <menuchoice><guimenu>File</guimenu><guimenuitem>New File</guimenuitem></menuchoice> from the menu. The
      <guilabel>New Account Hierarchy Setup</guilabel> assistant will start. Press <guibutton>Cancel</guibutton> to close
      the assistant as we don&rsquo;t want to use one of the predefined accounts structure; instead we will build a basic
      starting account structure from scratch. In the empty <application>&app;</application> window select
      <menuchoice><guimenu>View</guimenu><guimenuitem>New Accounts Page</guimenuitem></menuchoice> from the menu:
      the <guilabel>Accounts</guilabel> tab will open. Finally select
      <menuchoice><guimenu>Actions</guimenu><guimenuitem>New Account...</guimenuitem></menuchoice>.</para>

      <para>Now you are ready to build this basic starting account structure</para>

      <orderedlist>
        <listitem>
          <para>Account name <guilabel>Assets</guilabel> (account type
          <guilabel>Asset</guilabel>, parent account <guilabel>New top level
          account</guilabel>)</para>

          <screenshot id="accts-CreateAssetsAccounts">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/accts_CreateAssetsAccount.png"
                             format="PNG" srccredit="Cristian Marchi"></imagedata>
                </imageobject>

                <textobject>
                  <phrase>Creating an Assets account</phrase>
                </textobject>

                <caption>
                  <para>This image shows the dialog to create an assets
                  account</para>
                </caption>
              </mediaobject>
            </screenshot>
        </listitem>

        <listitem>
          <para>Account name <guilabel>Liabilities</guilabel> (account type
          <guilabel>Liability</guilabel>, parent account <guilabel>New top
          level account</guilabel>)</para>
        </listitem>

        <listitem>
          <para>Account name <guilabel>Equity</guilabel> (account type
          <guilabel>Equity</guilabel>, parent account <guilabel>New top level
          account</guilabel>)</para>
        </listitem>

        <listitem>
          <para>Account name <guilabel>Income</guilabel> (account type
          <guilabel>Income</guilabel>, parent account <guilabel>New top level
          account</guilabel>)</para>
        </listitem>

        <listitem>
          <para>Account name <guilabel>Expenses</guilabel> (account type
          <guilabel>Expenses</guilabel>, parent account <guilabel>New top
          level account</guilabel>)</para>
        </listitem>
      </orderedlist>

      <para>When you have created the top-level accounts, the main Account page
      in <application>&app;</application> should look like below.</para>

      <screenshot id="accts-toplevel">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/accts_toplevel.png" format="PNG"
                       srccredit="Cristian Marchi"></imagedata>
          </imageobject>

          <textobject>
            <phrase>The Basic Top-level Accounts</phrase>
          </textobject>

          <caption>
            <para>This image shows the basic top-level accounts.</para>
          </caption>
        </mediaobject>
      </screenshot>
    </sect3>

    <sect3 id="accts-examples-organization2">
      <title>Making Sub-Accounts</title>

      <para>You can now add to this basic top-level tree structure by inserting
      some real transaction-holding sub-accounts. Notice that the tax accounts
      are placed within a sub-account named <emphasis>Taxes</emphasis>. You can make sub-accounts
      within sub-accounts. This is typically done with a group of related
      accounts (such as tax accounts in this example).</para>
      <tip>
        <para>Instead of selecting <menuchoice><guimenu>Actions</guimenu><guimenuitem>New Account...</guimenuitem></menuchoice>
        from the menu, you can alternatively create a new sub-account of an account by right clicking
        on the main account&rsquo;s name and selecting the <guilabel>New Account...</guilabel> entry.
        This will open a dialog similar to the one depicted in
        <xref linkend="accts-examples-toplevel2" /> where the new sub-account will be already set as a
        child of the main account.</para>
      </tip>
        <orderedlist>
          <listitem>
            <para>Account name <guilabel>Cash</guilabel> (account type
              <guilabel>Cash</guilabel>, parent account
              <emphasis>Assets</emphasis>)
            </para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Checking</guilabel> (account type
            <guilabel>Bank</guilabel>, parent account
            <emphasis>Assets</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Savings</guilabel> (account type
            <guilabel>Bank</guilabel>, parent account
            <emphasis>Assets</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Visa</guilabel> (account type
            <guilabel>Credit Card</guilabel>, parent account
            <emphasis>Liabilities</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Salary</guilabel> (account type
            <guilabel>Income</guilabel>, parent account
            <emphasis>Income</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Phone</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Electricity</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Rent</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Groceries</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Taxes</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Federal</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses:Taxes</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Social Security</guilabel> (account
            type <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses:Taxes</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Medicare</guilabel> (account type
            <guilabel>Expense</guilabel>, parent account
            <emphasis>Expenses:Taxes</emphasis>)</para>
          </listitem>

          <listitem>
            <para>Account name <guilabel>Opening Balance</guilabel> (account
            type <guilabel>Equity</guilabel>, parent account
            <emphasis>Equity</emphasis>)</para>
          </listitem>
        </orderedlist>

      <para>After you have created these additional sub-accounts, the end
      result should look like below</para>

      <screenshot id="accts-tree">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/accts_tree.png" format="PNG"
                       srccredit="Cristian Marchi"></imagedata>
          </imageobject>

          <textobject>
            <phrase>The Basic Chart of Accounts</phrase>
          </textobject>

          <caption>
            <para>This image shows a simple chart of accounts.</para>
          </caption>
        </mediaobject>
      </screenshot>

      <para>Save this chart of accounts with the name
      <filename>gcashdata_3</filename>, as well as <filename>gcashdata_3emptyAccts</filename>,
      as we will continue to use them in the later chapters.</para>

      <para>You have now created a chart of accounts to track a simple
      household budget. With this basic framework in place, we can now begin
      to populate the accounts with transactions. The next chapter will cover
      this subject in greater detail.</para>
    </sect3>
  </sect2>
</sect1>
<sect1 id="chapter_txns">
  <title>Transactions</title>

  <para>This chapter will give you the basic information you need to
  understand and use transactions in <application>&app;</application>. Whereas accounts are the
  framework and structure of a chart of accounts, transactions are the data
  which fills each account.</para>

  <sect2 id="txns-concepts1">
    <title>Basic Concepts</title>

    <para>A <emphasis>transaction</emphasis> in a double entry accounting
    system such as <application>&app;</application> is an exchange between at least 2 accounts. Thus, a
    single transaction must always consist of at least two parts, a <emphasis>from</emphasis> and
    a <emphasis>to</emphasis> account. The <emphasis>from</emphasis> account is transferring value to the <emphasis>to</emphasis> account.
    Accountants call these parts of a transaction <emphasis>Ledger
    Entries</emphasis>. In <application>&app;</application>, they are called
    <emphasis>Splits</emphasis>.</para>

    <para>A split identifies the account to which it refers, the
    amount of money specifically moved to or from that account, and
    can contain a few other specific pieces of information if needed.
    <application>&app;</application> supports multiple splits in a
    single transaction, and the splits can move money into or out of
    the involved accounts arbitrarily.</para>

    <para>For example, you receive a paycheck and deposit it into your savings
    account at the bank. The <emphasis>transaction</emphasis> that occurs is
    that your bank savings account (an asset) received money from your income
    account. Two accounts are affected, and in this case there is a net
    increase in your equity.</para>

    <para>Working with transactions in <application>&app;</application> is performed using what is
    known as the <emphasis>account register</emphasis>. Every account you
    create has an account register. It will appear familiar to you as it looks
    very similar to the log used to track checkbooks.</para>

    <para>The account register is explained in the upcoming section,
    <xref linkend="txns-register-oview"/>.</para>
  </sect2>

  <sect2 id="txns-register-oview">
    <title>The Account Register</title>
	<para>The <emphasis>account register</emphasis> is the window that allows you to view 
	or edit preexisting transactions, or add new transactions for a particular account. To open 
	an account register from the Account Tree, double-click the account name, right click the 
	account name and select Open Account from the menu, or use the Open button on the toolbar. 
	<application>&app;</application> will display the account register window.</para>
	
	<sect3 id="txns-registers-features2">
		<title>Features of the Account Register</title>

		<para>The <emphasis>Titlebar</emphasis> of the account register displays the account 
		name. Below the <emphasis>Titlebar</emphasis>, the <emphasis>Menubar</emphasis> displays 
		the menu items available within the account register, and the <emphasis>Toolbar</emphasis> 
		contains handy buttons that help you work with the account register.</para>

		<para>At the bottom left of the register window, <application>&app;</application> displays 
		helpful messages as you move about the register. To the right, you can see the current account 
		balance and the total of cleared splits.</para>
	</sect3>
	<sect3 id="txns-regstyle1">
		<title>Choosing a Register Style</title>
		<para><application>&app;</application> offers several options for viewing your registers. The
        default style is <guilabel>Basic Ledger</guilabel> mode, which displays
        only the summary of splits affecting the current account. This is the
        style that most closely resembles other popular personal financial
        packages. You can choose a different register style from the <menuchoice><guimenu>View</guimenu></menuchoice> menu. 
		There are two other view modes:</para>
		<itemizedlist>
			<listitem>
				<para><menuchoice><guimenu>View</guimenu><guimenuitem>Auto-Split Ledger</guimenuitem></menuchoice>
				style expands the current transaction automatically. As you highlight a
				new transaction in the register, the transaction automatically expands to
				show all splits.</para>
			</listitem>
			<listitem>
				<para><menuchoice><guimenu>View</guimenu><guimenuitem>Transaction
				Journal</guimenuitem></menuchoice> style shows all splits for all transactions in 
				the register, which is more like an accounting journal.</para>
			</listitem>
		</itemizedlist>

		<para>All styles permit you to view your data in either single-line or
        double-line format. Select <menuchoice><guimenu>View</guimenu>
		<guimenuitem>Double Line</guimenuitem></menuchoice>, and you will see your transaction
		line expand to two register lines. Double-line mode will also display the transaction-level Notes field.</para>

		<para>Below are screenshots that demonstrate how the Basic Ledger and Transaction Journal views differ.</para>
		<para>For this example, let&rsquo;s assume that you have purchased 3 pair of Jeans for 
			$1,000, and have recorded the purchase as a split transaction with each pair entered 
			on a separate split.</para>
		<para>The below screenshots illustrate the different view modes.</para>

		<para>First let&rsquo;s view the Jeans transaction from your checking account:</para>

		<screenshot id="txns-registersplit4">
        <mediaobject>
            <imageobject>
                <imagedata fileref="figures/txns_registersplit4.png" format="PNG"
                srccredit="Bengt Thuree" />
            </imageobject>

            <textobject>
                <phrase>3 Jeans purchases</phrase>
            </textobject>

            <caption><para>
                This image shows one split transaction with 3 Jeans purchases
            </para></caption>
        </mediaobject>
		</screenshot>

		<para>Now, let&rsquo;s open the <emphasis>Expenses:Clothes</emphasis> account, and look at it in Basic view.</para>

		<screenshot id="txns-registersplit5">
		<mediaobject>
            <imageobject>
                <imagedata fileref="figures/txns_registersplit5.png" format="PNG"
                srccredit="Bengt Thuree" />
            </imageobject>

            <textobject>
                <phrase>A jump to the <emphasis>Expenses:Clothes</emphasis> account</phrase>
            </textobject>

            <caption><para>This image shows <emphasis>Expenses:Clothes</emphasis> account
                in Basic Ledger mode.</para></caption>
        </mediaobject>
		</screenshot>
		<para>Three entries appear here, but there was only the single split entry in the 
			checking account. Further examination shows that each row has a different amount, 
			$200, $300, and $500. This demonstrates that each row in this view reflects a single 
			split from the original transaction.</para>

		<para>Changing to Transaction Journal mode will display only the original split transaction.</para>

		<screenshot id="txns-registersplit6">
        <mediaobject>
            <imageobject>
                <imagedata fileref="figures/txns_registersplit6.png" format="PNG"
                srccredit="Bengt Thuree" />
            </imageobject>
            <textobject>
                <phrase>A jump to the <emphasis>Expenses:Clothes</emphasis> account</phrase>
            </textobject>
            <caption><para>This image shows <emphasis>Expenses:Clothes</emphasis> account in
                Transaction Journal mode.</para></caption>
        </mediaobject>
		</screenshot>

	</sect3>
	<sect3 id="txns-shortcuts1">
    <title>Using Entry Shortcuts</title>

    <para><application>&app;</application> provides several time-saving shortcuts for entering your
        data. When you type the first few characters of a description that you
        have used before, the QuickFill feature automatically fills in the rest of
        the transaction as you last entered it. When you type in the first
        characters of an account name in either the <guilabel>Transfer</guilabel>
        field of the transaction line or the <guilabel>Account</guilabel> field of
        the split line, QuickFill will automatically complete the name from your
        account list. It also helps you with entering sub-accounts in these
        fields: simply type the first characters of the parent account name
        followed by a <keycap>:</keycap> (colon) and the first characters of the sub-account name. For
        example, to enter <emphasis>Assets:Checking</emphasis>, you might type
        <userinput>A:C</userinput> and let <application>&app;</application> fill in the rest.</para>
    <warning><para>Because <keycap>:</keycap> is the account separator symbol,
        you can not use it in your account names.</para></warning>
    <tip><para>If you really need the colon in your account names, you can select another symbol by
        <menuchoice><guimenu>Edit</guimenu><guisubmenu>Preferences</guisubmenu><guisubmenu>Accounts</guisubmenu>
            <guilabel>Character</guilabel></menuchoice>.</para></tip>
    <para>Register keyboard shortcuts also save you time, and <application>&app;</application> provides
        several of them. In the date field, you can type:</para>

    <itemizedlist>
        <listitem>
            <para><keycap>+</keycap> or <keycap>=</keycap> to increment the date
                and <keycap>-</keycap> or <keycap>_</keycap> to decrement the
                date</para>
        </listitem>

        <listitem>
            <para><keycap>]</keycap> or <keycap>}</keycap> to increment the month
                and <keycap>[</keycap> or <keycap>{</keycap> to decrement the
                month</para>
        </listitem>

        <listitem>
            <para><keycap>M</keycap> or <keycap>m</keycap> to enter the first date
                of the month</para>
        </listitem>

        <listitem>
            <para><keycap>H</keycap> or <keycap>h</keycap> to enter the last date
                of the month</para>
        </listitem>

        <listitem>
            <para><keycap>Y</keycap> or <keycap>y</keycap> to enter the first date
                of the year</para>
        </listitem>

        <listitem>
            <para><keycap>R</keycap> or <keycap>r</keycap> to enter the last date
                of the year</para>
        </listitem>

        <listitem>
            <para><keycap>T</keycap> or <keycap>t</keycap> to enter today&rsquo;s
                date</para>
        </listitem>
    </itemizedlist>

    <tip><para>These date shortcuts not only work in the account register but everywhere
            you can enter a date.</para></tip>

    <tip><para>Specifically for dates there's another way you can save time: you can enter
            partial dates. For example if you only enter one number, <application>&app;</application>
            will interpret it as the day in the current month of the current year. If you only enter
            a day and month, <application>&app;</application> will automatically append the year. The
            default this to take such a date in a sliding window starting 11 months before the current
            month. This means that if you enter 1/5 (January 5th) as date while the current date is
            in December 2015, the date will be completed as 1/5/16. This default can be changed via
            <menuchoice><guimenu>Edit</guimenu><guisubmenu>Preferences</guisubmenu><guisubmenu>Date/Time</guisubmenu>
            <guilabel>Date Completion</guilabel></menuchoice>. You can change it to either always
            evaluate a date in the current calendar year or change the start of the sliding window.</para></tip>

    <para>In the <guilabel>Num</guilabel> field of the transaction line, you
        can type <keycap>+</keycap> to increment the transaction number from the
        last one you typed in. Typing <keycap>-</keycap> will decrement the
        number. This will also work in the <guilabel>Action</guilabel> field of
        the split line, if you choose to enter split numbers there. The
        <guilabel>Action</guilabel> field also supports QuickFill - if you type
        the first characters of a common action (such as
        <guilabel>Deposit</guilabel>), <application>&app;</application> will fill in the rest.</para>

    <para>The <guilabel>Transfer</guilabel> field supports QuickFill
        of account names.  You can start typing an account name and
        <application>&app;</application> will fill in the remaining part of the name.  Typing the
        separator character at any time will complete the current level of
        the account name, leaving the cursor positioned to start the next
        level of account name.  For example, typing <keycap>A:C</keycap> the
        standard set of account names will complete to the
        <emphasis>Assets:Checking</emphasis> account.  You can also type the
        <keycap>Menu</keycap> or <keycombo><keycap>Ctrl</keycap><keycap>Down</keycap></keycombo> keys in this
        field to pop up a list of all account names.</para>

    <para>In any of the amount fields, you can use a built-in calculator.
        Simply type in the first value, followed by <keycap>+</keycap>,
        <keycap>-</keycap>, <keycap>*</keycap>, or <keycap>/</keycap>, then type
        in the second value. <application>&app;</application> will perform the calculation and return the
        resulting value to the amount field when you press the
        <keycap>Tab</keycap> key.</para>

	<para>All of the menu items have access keys defined, and these are marked
		by underlined characters in the menu names. Press <keycap>Alt</keycap> +
        [underlined character] to bring up the menu, then select an item by typing
        its underlined character. For example, typing <keycombo>
            <keycap>Alt</keycap>

            <keycap>A</keycap>
        </keycombo> brings up the Actions menu, then typing
        <keycap>P</keycap> will split the transaction. A few of the menu items
        also have shortcut keys that immediately invoke the command (typically
        using the <keycap>Ctrl</keycap> key).  These shortcuts are listed next
        to the item.</para>

    <para>To move around the register, use these keys to save time:</para>

    <itemizedlist>
        <listitem>
            <para><keycap>Tab</keycap> to move to the next field, <keycombo>
                <keycap>Shift</keycap>

                <keycap>Tab</keycap>
            </keycombo> to move to the previous field</para>
        </listitem>

        <listitem>
            <para><keycap>Home</keycap> to move to the beginning of the field,
                <keycap>End</keycap> to move to the end of the field</para>
        </listitem>

        <listitem>
            <para><keycap function="enter">Enter</keycap> or <keycap>↓</keycap> to move to the next
                transaction, <keycap>↑</keycap> to move to the previous
                transaction</para>
        </listitem>

        <listitem>
            <para><keycap>Page Up</keycap> to move up one screen, <keycap>Page
                Down</keycap> to move down one screen</para>
        </listitem>

        <listitem>
            <para><keycombo>
                <keycap>Shift</keycap>

                <keycap>Page Up</keycap>
            </keycombo> to go to the first transaction, <keycombo>
                <keycap>Shift</keycap>

                <keycap>Page Down</keycap>
            </keycombo> to go to the last transaction</para>
        </listitem>
    </itemizedlist>

    <para>In the <guilabel>Reconcile</guilabel> window you can use these
        keyboard shortcuts:</para>

    <itemizedlist> <listitem> <para><keycap>Tab</keycap> moves to the next box and
    <keycombo><keycap>Shift</keycap><keycap>Tab</keycap></keycombo> moves to the previous box</para> </listitem>

        <listitem>
            <para>Space bar toggles the status between reconciled and not
                reconciled</para>
        </listitem>

        <listitem>
            <para><keycap>↑</keycap> and <keycap>↓</keycap> navigate through the
                entries within the current box</para>
        </listitem>
    </itemizedlist>
	</sect3>
	</sect2>
    <sect2 id="txns-registers-txntypes">
    <title>Simple vs. Split Transactions</title>

    <para>Every transaction in <application>&app;</application> has at least two splits, but a transaction can have more than two splits. A transaction with only two splits is called a <emphasis>simple transaction</emphasis>, since it only involves the current account and a single remote account. A transaction with three or more accounts is called a <emphasis>split transaction</emphasis>.</para>
    <para>When the register is in Basic view, you will see a summary of the splits affecting the current account. For a simple transaction, the <guilabel>Transfer</guilabel> column will display the other account from which money is <emphasis>transferred</emphasis>. For a split transaction, the <guilabel>Transfer</guilabel> column will display <guilabel>-- Split Transaction --</guilabel>. You can see the individual splits of each
        transaction by clicking the <guibutton>Split</guibutton> button in the
        <emphasis>Toolbar</emphasis> while selecting the appropriate transaction.</para>

    <para>For split transactions, the first line of the transaction is the
        <emphasis>transaction line</emphasis>. It contains a
        <guilabel>Date</guilabel>, optional <guilabel>Num</guilabel> (such as a
        check number), transaction <guilabel>Description</guilabel>, total
        amount affecting the current account (<guilabel>Tot Deposit</guilabel>
        here), and updated account <guilabel>Balance</guilabel> after the
        current transaction. Note that in the expanded view, the
        <guilabel>Transfer</guilabel> column heading disappears, and there is no
        account name listed in that field. This line shows you only a summary of
        the transaction&rsquo;s effect on the current account. For more detailed
        information, you need to look at the individual splits that make up the
        transaction.</para>
        <note>
          <para>Note: An account register displays a transaction when that
          transaction has a split assigned to the account. If a given transaction
          has more than one split assigned to the account, then in Basic and
          Auto-Split views, that transaction will appear in the register one
          time for each split assigned to that account. In Transaction Journal
          view, such a transaction will only appear once in the register.</para>
        </note>

<para>The partial lines below the transaction line are the
    <emphasis>split lines</emphasis>, and they are separated by gray lines.
    As you highlight one of the split lines, the column headings change to
    show the split-related fields:</para>

<screenshot id="txns-registersplit2">
    <mediaobject>
        <imageobject>
            <imagedata fileref="figures/txns_registersplit2.png" format="PNG"
            srccredit="Bengt Thuree" />
        </imageobject>

        <textobject>
            <phrase>How split headings change</phrase>
        </textobject>

        <caption><para>This image shows how split headings
            change.</para></caption>
    </mediaobject>
</screenshot>

<para>Each split contains an optional <guilabel>Action</guilabel>, or
    type of split, which you can either type in or choose from a pull-down
    list. The split also contains an optional <guilabel>Memo</guilabel>
    which describes the split. Each split affects an
    <guilabel>Account</guilabel>, which can be selected from a pull-down
    list of your accounts. The <guilabel>R</guilabel> field indicates
    whether the split has been reconciled. The last two columns show the
    amount of the split and whether money is coming into or going out of the
    account.</para>

<para>As we discussed in <xref linkend="basics-accounting1" />, total
    debits (left-column entries) must equal total credits (right-column
    entries) for each transaction. In the example shown above, the total
    debits equal the total credits, so this transaction is balanced. If you
    notice, the transaction line contains the same debit amount as the
    <guilabel>Checking</guilabel> split line. Why is this shown twice?
    Because the transaction line is merely a <emphasis>summary</emphasis> of
    the transaction&rsquo;s effect on the current account. The same transaction in
    a different account will have a different transaction line, one that
    shows the effect on that particular account. You can see this by
    highlighting another split line and clicking the
    <guibutton>Jump</guibutton> button on the <emphasis>Toolbar</emphasis>.</para>

<para>In this example, if you jump to the
    <emphasis>Income:Salary</emphasis> account, <application>&app;</application> brings up the same
    transaction in the <emphasis>Income:Salary</emphasis> - Register:</para>

<screenshot id="txns-registersplit3">
    <mediaobject>
        <imageobject>
            <imagedata fileref="figures/txns_registersplit3.png" format="PNG"
            srccredit="Bengt Thuree" />
        </imageobject>

        <textobject>
            <phrase>A jump to the <emphasis>Income:Salary</emphasis> account</phrase>
        </textobject>

        <caption><para>This image shows a jump to the
            <emphasis>Income:Salary</emphasis> account.</para></caption>
    </mediaobject>
</screenshot>

<para>Note that the transaction line total now summarizes the effect on
    the <emphasis>Income:Salary</emphasis> account instead of the
    <emphasis>Checking Account</emphasis>, because you are looking at the
    <emphasis>Income:Salary</emphasis> account register. The splits are
    exactly the same, but the transaction line now reflects the credit to
    the <emphasis>Income:Salary</emphasis> account.</para>

    <sect3 id="txns-registers-twoaccount2">
      <title>Simple Transaction Example</title>

      <para>Starting with the chart of accounts we created in the
      previous chapter <filename>gcashdata_3</filename>, double click on the
      <guilabel>Checking</guilabel> asset account. Let&rsquo;s add a simple
      transaction to the checking account. When you first create your accounts
      in <application>&app;</application>, it is common to start them off with an initial
      balance.</para>

      <para>In the first transaction row, enter a date (eg: March, 1, 2006), a
      description (eg: <quote>Opening Balance</quote>), click on the <guilabel>Transfer</guilabel> pop-up menu
      and select <emphasis>Equity:Opening Balances</emphasis>, add a deposit
      value of $1000, and press the <keycap function="enter">Enter</keycap> key. The account register should now
      appear similar to this figure:</para>

      <screenshot id="txns-register-2account">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_register_2account.png"
                       format="PNG" srccredit="Bengt  Thuree" />
          </imageobject>

          <textobject>
            <phrase>The Checking Account - Register</phrase>
          </textobject>

          <caption><para>This image shows <emphasis>Assets:Checking</emphasis> -
          Register after inserting a starting value
          transaction.</para></caption>
        </mediaobject>
      </screenshot>

      <para>Setting the starting balances of an account is an example of a
      simple two account transaction. In this case, affecting the
      <emphasis>Assets:Checking</emphasis> and the <emphasis>Equity:Opening Balances</emphasis>
      accounts.</para>

      <para>As another example of a simple 2 account transaction, add another
      transaction to describe the purchase of $45.21 worth of groceries. From
      within the <emphasis>Assets:Checking</emphasis> account, you would set
      <guilabel>Transfer</guilabel> to
      <emphasis>Expenses:Groceries</emphasis>. The account register should now
      appear:</para>

      <screenshot id="txns-register-2account2">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_register_2account2.png"
                       format="PNG" srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>The Checking Account - Register</phrase>
          </textobject>

          <caption><para>This image shows <emphasis>Assets:Checking</emphasis> -
          Register after adding a transaction for
          groceries.</para></caption>
        </mediaobject>
      </screenshot>
    </sect3>

    <sect3 id="txns-registers-multiaccount2">
      <title>Split Transaction Example</title>

      <para>The need for 3 or more splits in a transaction occurs when you need
      to split either the <quote>from</quote> or the <quote>to</quote> account in a transaction into
      multiple accounts. The classic example of this is when you receive a
      paycheck. Your take home pay from a paycheck will typically be less than
      your net pay, with the difference being due to taxes, retirement account
      payments, and/or other items. Thus, the single transaction of you
      receiving a paycheck involves other accounts besides simply
      <emphasis>Assets:Checking</emphasis> and
      <emphasis>Income:Salary</emphasis>.</para>
      <para>To add the paycheck split transaction from the<emphasis role="italic"> Assets:Checking</emphasis> account register window, click on a new transaction line and click <guilabel>Split</guilabel>. Note that if you have set your register view to Auto-Split or Transaction Journal, the splits will be opened for you. Enter the description of this transaction on the first line(e.g. “Employers R Us”). In the split lines below this, enter the various splits that make up this transaction, one by one. To enter the splits, first choose the account, then enter the amount by which to change the account. Keep in mind that when in an asset account register, amounts entered in the left column increase the account balance, while amounts entered in the right column decrease the balance (for more about this, see <xref linkend="basics-transactions2"/>). Tab or click the next split line and repeat the process. Note that if you are using the keyboard to navigate the transaction, use<keycap> Tab</keycap> to move from field to field, as using <keycap>Enter</keycap> will commit the transaction and create splits to an Imbalance account.</para>
      <note>
        <para>When creating a transaction in <application>&app;</application>, splits can be entered in any order.
        However, when the transaction is closed (either when leaving the transaction, or when
        pressing the <keycap function="enter">Enter</keycap> key), all debit splits will jump ahead of all credit splits.</para>
      </note>

      <para>In this example, choose the deposit account
      (<emphasis>Assets:Checking</emphasis>) and then enter the amount that
      is being deposited into it (e.g. $670). Follow this by entering the
      amounts for the various taxes:
      <emphasis>Expenses:Taxes:Federal</emphasis> account, $180;
      <emphasis>Expenses:Taxes:Medicare</emphasis> account, $90; and
      <emphasis>Expenses:Taxes:Social Security</emphasis> account, $60. Finally,
      enter the gross total of your paycheck ($1,000 in this example) as a
      withdrawal transfer from <emphasis>Income:Salary</emphasis>.</para>

      <para>The final split should look like <xref
      linkend="txns-register-multiaccount"/>. Remember to press <keycap function="enter">Enter</keycap> after finishing the entry. But you
      should also know that when you press <keycap function="enter">Enter</keycap>, the split view will be
      <quote>folded</quote> back into a simplified transaction view. The
      splits are still there; you just have to click
      <guilabel>Split</guilabel> to view them. See <xref
      linkend="txns-registers-features2"/> for details.</para>

      <figure id="txns-register-multiaccount">
        <title>Entering a split transaction</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_register_multiaccount.png"
                       format="PNG" srccredit="Bengt Thuree" />
          </imageobject>
          <textobject>
            <phrase>Account Register - Split Transaction</phrase>
          </textobject>
        </mediaobject>
      </figure>
    </sect3>
  </sect2>

  <sect2 id="txns-reconcile1">
    <title>Reconciliation</title>

      <para>Once transactions have been entered into <application>&app;</application>, it is important to verify
      that they agree with the records of your financial institution. This
      verification process is known as <emphasis role="strong">reconciliation</emphasis>, and it is key to determine
      whether your records are accurate. Most commonly, you will check transactions
      against bank statements, although you can use this process to verify any
      transaction.</para>

      <para><application>&app;</application> keeps track of the reconciliation status of each
        transaction. The reconciliation status of a transaction is shown by the
        reconciliation <guilabel>R</guilabel> field in a register:
        <emphasis>y</emphasis> indicates that a transaction has been
        reconciled, <emphasis>n</emphasis> indicates that it has not, and <emphasis>c</emphasis> indicates that it has
        been cleared, but not reconciled. A split marked cleared signifies that you got some kind of confirmation
        that the institution accepted the order (e.g. you have the restaurant's receipt for your credit card purchase).
        You can toggle the reconciliation status
        between <emphasis>n</emphasis> and <emphasis>c</emphasis> by clicking in the <guilabel>R</guilabel> field; you can set
        it to <emphasis>y</emphasis> by using <xref linkend="txns-reconcile-window2" />.</para>

      <para>At the bottom of the account window, there are (among others) two running
      balances (the <guilabel>cleared</guilabel> and <guilabel>reconciled</guilabel> balance), and the
      <guilabel>total</guilabel> balance. The former balances should correspond to how much money
      the bank thinks you have in your account, while the latter includes outstanding transactions.</para>

      <para>For example, when you write a check for something, you should
      enter the transaction into <application>&app;</application>. The reconciliation <guilabel>R</guilabel> field of the
      transaction will initially contain <guilabel>n</guilabel> (new). Your new entry will
      contribute to the <guilabel>total</guilabel> balance, but not to the <guilabel>cleared</guilabel> and
      <guilabel>reconciled</guilabel> balance. Later, if you got some confirmation that the check has been cashed,
      you might click on the transaction&rsquo;s <guilabel>R</guilabel> field to change it to <emphasis>c</emphasis>
      (cleared). When you do this, the <guilabel>cleared</guilabel> balance will
      change to include this amount. When the bank statement arrives, you can
      then compare it to what you&rsquo;ve recorded in <application>&app;</application> by opening the reconciliation
      window. There, you will be able to change the <guilabel>R</guilabel> field to <emphasis>y</emphasis> (reconciled).</para>

      <note>
        <para>You cannot reconcile directly in a register window by clicking in the <emphasis>R</emphasis> field. You must use the
        reconciliation window. Once a transaction has been marked <emphasis>reconciled</emphasis>,
        it can no longer be easily changed without breaking the
        <link linkend="rec-start-blnc"><guilabel>Starting Balance</guilabel></link> of the next reconciliation.</para>
      </note>

      <warning>
        <para>It is important to understand that reconciliation is done for a given
        date, and when you reconcile an account based on a statement from a given date,
        you are reconciling <emphasis role="strong">all transactions prior to that date</emphasis>. Therefore, if you
        add or modify transactions that predate your last reconciliation, your
        <emphasis role="strong">reconciled</emphasis> balances will be thrown off.</para>
      </warning>

    <sect3 id="txns-reconcile-window2">
      <title>Reconcile windows</title>

      <para>The reconciliation windows are used to reconcile a <application>&app;</application> account
      with a statement that a bank or other institution has sent you.
      Reconciliation is useful not only to double-check your records against
      those of your bank, but also to get a better idea of outstanding
      transactions, e.g. uncashed checks.</para>

      <para>To use the reconciliation windows, select an account from the
      account tree and click on <menuchoice><guimenu>Actions</guimenu>
      <guimenuitem>Reconcile</guimenuitem></menuchoice>. A window like the one below will appear in which you can
      enter the reconcile information.</para>

      <screenshot id="txns-reconcile-window-1">
        <mediaobject>
            <imageobject role="html">
              <imagedata fileref="figures/txns_reconcile_window1.png"
                         format="PNG" srccredit="Cristian Marchi"></imagedata>
            </imageobject>
            <imageobject role="fo">
              <imagedata fileref="figures/txns_reconcile_window1.png"
                         format="PNG" srccredit="Cristian Marchi"></imagedata>
            </imageobject>

          <textobject>
            <phrase>Reconcile Window</phrase>
          </textobject>

          <caption><para>The initial reconcile window.</para></caption>
        </mediaobject>
      </screenshot>

      <para>In the initial reconcile window, some <guilabel>Reconcile Information</guilabel> need to be entered.</para>
      <variablelist>
        <varlistentry><term><guilabel>Statement Date</guilabel></term>
          <listitem>
            <para>The date of the statement you will be reconciling against.</para>
	  <tip>
	    <para>Click on the down arrow in the right of this field to open a calendar</para>
	  </tip>
          </listitem>
        </varlistentry>

        <varlistentry id="rec-start-blnc"><term><guilabel>Starting Balance</guilabel></term>
          <listitem>
            <para>This is a non-editable item which displays the balance from the previous
              reconciliation. It should match the starting balance in your statement.</para>

            <warning><para>Sometimes, the opening balance in <application>&app;</application> does not match
              that found on your statement. This can happen the first time you reconcile your account or
              when a previously-reconciled transaction is de-reconciled or deleted.</para></warning>

            <note><para>The first time you reconcile your account, the <guilabel>starting balance</guilabel>
              will be <guilabel>0.00</guilabel>, thus probably not the  <emphasis>opening balance</emphasis>
              of your account. When you reconcile the account, the <emphasis>opening balance</emphasis> for the
              account will be included in the reconciliation, and the result should balance.</para></note>

            <tip>
              <para>In the case when a previously-reconciled transaction is accidentally de-reconciled, you
                can simply re-reconcile the transaction along with the transactions on the current statement, and
                the result should balance.</para>

              <para>The case of accidentally deleting a previously-reconciled transaction presents
                more of a challenge; if you cannot determine what was
                deleted and restore it to the register, you will have to create a dummy
                transaction to get the reconciliation to finish.</para>
            </tip>
            <caution><para>While the latter case does not matter for your private accounting,
              you should have a really good explanation for your auditors, if you are the
              accountant of a club or a company.</para></caution>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Ending Balance</guilabel></term>
          <listitem>
            <para>This field should be filled with the ending balance as it appears in the statement.</para>
	  <note>
	    <para><application>&app;</application> automatically fills this field with the
	    <guilabel>Present</guilabel> balance as shown in the lower part of the
	    account&rsquo;s register.</para>
	  </note>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Include Sub-accounts</guilabel></term>
          <listitem>
            <para>Check this option if you want to include in the reconciliation the transactions
            that belongs to the sub-accounts of the currently selected account. Note that all sub-accounts must be in the same commodity as the parent for the option to be enabled.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guibutton>Enter Interest Payment</guibutton></term>
          <listitem>
            <para>Clicking this button opens a new window that allow you to enter an interest transaction to the account to be
            reconciled.</para>
	    <tip>
	      <para>The <guilabel>Interest Payment</guilabel> window might be opened automatically when you start a reconciliation
	      for an account of the type <emphasis>Bank</emphasis>, <emphasis>Credit</emphasis>,
	      <emphasis>Mutual</emphasis>, <emphasis>Asset</emphasis>, <emphasis>Receivable</emphasis>,
	      <emphasis>Payable</emphasis>, and <emphasis>Liability</emphasis>. If you want to disable
	      this behavior for any of the previous accounts, go to the <guilabel>Register</guilabel> tab of the
	      <guilabel>&app; Preferences</guilabel> and uncheck the <guilabel>Automatic interest transfer</guilabel>
	      option. Alternatively, to disable this behavior only for the selected account, press the
	      <guibutton>No Auto Interest Payments for this Account</guibutton> button in the
	      <guilabel>Interest Payment</guilabel> window.</para>
	    </tip>
          </listitem>
        </varlistentry>
       </variablelist>

      <para>Then, click on the <guibutton>Ok</guibutton> button, and you will see
      the transactions listing reconcile window:</para>

      <screenshot id="txns-reconcile-window-2">
        <mediaobject>
            <imageobject role="html">
              <imagedata fileref="figures/txns_reconcile_window2.png"
                         format="PNG" srccredit="Cristian Marchi" width="510"></imagedata>
            </imageobject>
            <imageobject role="fo">
              <imagedata fileref="figures/txns_reconcile_window2.png"
                         format="PNG" srccredit="Cristian Marchi"></imagedata>
            </imageobject>

          <textobject>
            <phrase>Reconcile Window</phrase>
          </textobject>

          <caption><para>The transactions listing in the reconcile
          window.</para></caption>
        </mediaobject>
      </screenshot>

      <para>The two panes called <guilabel>Funds In</guilabel> and
      <guilabel>Funds Out</guilabel>, lists all the unreconciled transactions that belongs to the account
      that is going to be reconciled.
      The <guilabel>R</guilabel> columns show whether the transactions have been reconciled.</para>

      <para>Now, examine each item on the bank statement, and look for the
      matching item in the <guilabel>Reconcile</guilabel> window.</para>

      <para>If you cannot find a transaction, then perhaps you forgot to enter it, or did not know that the transaction
      had happened. You can use the <guibutton>New</guibutton> button on the <emphasis>Toolbar</emphasis>, or the
      <menuchoice><guimenu>Transaction</guimenu><guimenuitem>New</guimenuitem></menuchoice>
      menu item in the  menu, to open a register window and enter the missing
      transaction. The new item will appear in the <guilabel>Reconcile</guilabel> window when you
      press the <guibutton>Enter</guibutton> button in the register after entering the transaction.</para>

      <para>When you find the item in the <guilabel>Reconcile</guilabel> window, compare the amount
      in the item to the amount on the statement. If they disagree, you may
      have made an error when you entered the transaction in <application>&app;</application>. You can
      use the <guibutton>Edit</guibutton> button on the <emphasis>Toolbar</emphasis>, or the
      <menuchoice><guimenu>Transaction</guimenu><guimenuitem>Edit</guimenuitem></menuchoice>
      item, to open a register window and correct the transaction.</para>

      <para>If the amounts agree, click on the item in the <guilabel>Reconcile</guilabel> window.
      A check mark wil appear in the <guilabel>R</guilabel> column aside the selected transaction.
      <application>&app;</application> will automatically update the amounts in the lower right summary pane.</para>

      <tip>
        <para>You can use the <keycap>up</keycap>/<keycap>down</keycap> arrow keys to scroll to the item, the
        <keycap>space</keycap> key to mark the item as reconciled and the <keycap>Tab</keycap>
        key to switch panes.</para>
      </tip>

      <para>You then repeat this for each item that appears on the bank
      statement, verifying that the amounts match with the amounts in <application>&app;</application>,
      and marking off transactions in <application>&app;</application> as they are reconciled.</para>

     <tip>
       <para>You can check or uncheck the reconcile status of all transactions in 
       either pane by clicking on a transaction in the required pane then clicking 
       <keycap>Ctrl-A</keycap> followed by <keycap>space</keycap>. This will toggle 
       the reconcile status of all transactions in the pane to either checked or 
       unchecked state. This procedure can be repeated to achieve the desired status 
       for the transactions in the pane.</para>
     </tip>

     <para>At the bottom of the <guilabel>Reconcile</guilabel> window there is a <guilabel>Difference</guilabel> field,
      which should show <guilabel>0.00</guilabel> when you are done reconciling. If it shows some
      other value, then either you have missed transactions, or some amounts
      may be incorrect in <application>&app;</application>. (Or, less likely, the bank may have made an
      error.)</para>

      <note><para>Under some circumstances, it may be difficult or impossible to determine why an account will not reconcile. If you are unable to correct the discrepancy between your books and a statement, <application>&app;</application> includes a <guibutton>Balance</guibutton> button on the <emphasis>Toolbar</emphasis> that will automatically create a balancing entry for you in the amount that cannot be reconciled.</para>
          <para>To use this, carry out the full reconciliation (marking all transactions that you can identify) and then click this button. <application>&app;</application> will create a balancing entry for the remaining discrepancy that uses the <emphasis>Special Accounts:Orphan-XXX</emphasis> account (where "XXX" represents your currency). The Reconcile window will close; re-opening it will allow you to check the newly-created balancing entry and finish the process.</para></note>

      <para>When you have marked off all the items on the bank statement and the difference is 0.00, press the <guibutton>Finish</guibutton> button on the <emphasis>Toolbar</emphasis> or
      select <menuchoice><guimenu>Reconcile</guimenu><guimenuitem>Finish</guimenuitem></menuchoice> from the menu.
      The <guilabel>Reconcile</guilabel> window will close.
      In the register window, the <guilabel>R</guilabel> field of the reconciled transactions will
      change to <emphasis>y</emphasis>.</para>

      <para>In this case, we have not received all the information yet, so we
      simply press the <guibutton>Postpone</guibutton> button, so we can continue at
      a later stage. Observe that the <guilabel>R</guilabel> column indicates we cleared (<emphasis>c</emphasis>)
      two transactions. They have not been reconciled yet, but we have
      verified these two transactions so they have been marked as cleared. If
      you look at the <emphasis>Statusbar</emphasis> at the bottom of the account register, you
      will see a summary of what has been reconciled and what has been cleared
      (<guilabel>Cleared:USD 954.79 Reconciled:USD 0.00</guilabel>)</para>

      <screenshot id="txns-reconcile-window-3">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_reconcile_window3.png"
                       format="PNG" srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Checking account</phrase>
          </textobject>

          <caption><para>The Checking account after postponing the
          reconciliation.</para></caption>
        </mediaobject>
      </screenshot>
    </sect3>
  </sect2>

  <sect2 id="txns-sxn1">
    <title>Scheduled Transactions</title>

    <para>Scheduled transactions are made to help entering repetitive money
    operations, like subscriptions, insurances or taxes. By using scheduled
    transactions, you only have to enter the concerned transaction once, set a
    few parameters like start date, frequency and a little description, and
    then <application>&app;</application> will tell you whenever a scheduled transaction is ready to be
    created, and create it for you.</para>

    <para>In this howto, we&rsquo;ll take a monthly Internet subscription of 20 USD
    as example, which is taken on the 28th of each month.</para>

    <para>In <application>&app;</application>, there are two ways of creating scheduled transactions,
    <link linkend="txns-sxn-ledger2">from the ledger</link> or from the
    <link linkend="txns-sxn-editor2">Scheduled Transactions Editor</link>.</para>

    <sect3 id="txns-sxn-ledger2">
      <title>Creating from the Ledger</title>

      <para>Enter the first occurrence of your to-schedule transaction in the
      ledger. In the <guilabel>Transfer</guilabel> field for this transaction, type
      <emphasis>Expenses:Internet</emphasis> as shown in the next screenshot.</para>

      <screenshot id="txns-sxn-ledger-1">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_sxn_ledger1.png" format="PNG"
                       srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Step one creating scheduled transaction from the
            ledger</phrase>
          </textobject>

          <caption><para>Step one creating scheduled transaction from the
          ledger</para></caption>
        </mediaobject>
      </screenshot>

      <note>
        <para>Since we did not create the <emphasis>Expenses:Internet</emphasis> account, <application>&app;</application>
        will prompt us to create it.</para>
      </note>

      <para>Then you right click on your transaction and select
      <guilabel>Schedule...</guilabel></para>

      <screenshot id="txns-sxn-ledger-2">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_sxn_ledger2.png" format="PNG"
                       srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Step two creating scheduled transaction from the
            ledger</phrase>
          </textobject>

          <caption><para>Step two creating scheduled transaction from the
          ledger</para></caption>
        </mediaobject>
      </screenshot>

      <para>A window like this will appear:</para>

      <screenshot id="txns-sxn-ledger-3">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_sxn_ledger3.png" format="PNG"
                       srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Step three creating scheduled transaction from the
            ledger</phrase>
          </textobject>

          <caption><para>Step three creating scheduled transaction from the
          ledger</para></caption>
        </mediaobject>
      </screenshot>

      <para>Let&rsquo;s fill the values, we know that the subscription is taken on
      the 28th each month, and the next one is for next month (since we
      entered the one for this month manually) :</para>

      <screenshot id="txns-sxn-ledger-4">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_sxn_ledger4.png" format="PNG"
                       srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Filling in data to a scheduled transaction</phrase>
          </textobject>

          <caption><para>Filling in data to a scheduled
          transaction</para></caption>
        </mediaobject>
      </screenshot>

      <para>Click the <guibutton>OK</guibutton> button, and the transaction will be scheduled.
      <application>&app;</application> now has memorized this scheduled transaction and on the 28th of
      next month, it will pop up a window asking if it should create it (see
      far below for a screenshot of this window).</para>
    </sect3>

    <sect3 id="txns-sxn-editor2">
      <title>Creating from the Editor</title>

      <para>Another way of entering a scheduled transaction is from the
      <guilabel>Scheduled Transaction Editor</guilabel>, it may be faster if we have several
      scheduled transactions to create at once.</para>

      <para>From the main accounts windows, select
      <menuchoice><guimenu>Actions</guimenu><guisubmenu>Scheduled Transactions</guisubmenu>
      <guimenuitem>Scheduled Transaction Editor</guimenuitem></menuchoice> from the <emphasis>Menubar</emphasis>.
      A new <guilabel>Scheduled Transactions</guilabel> tab will be opened in the
      current <application>&app;</application> window as shown above:</para>

      <screenshot id="txns-sxn-editor-2">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor-2.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor-2.png" format="PNG"
                       srccredit="Cristian Marchi"/>
          </imageobject>

          <textobject>
            <phrase>Empty <guilabel>Scheduled Transactions</guilabel> tab</phrase>
          </textobject>

          <caption><para>Empty <guilabel>Scheduled Transactions</guilabel> tab</para></caption>
        </mediaobject>
      </screenshot>

      <para>This tab contains a list, now empty, of all the scheduled
      transactions. Let&rsquo;s create a new one by clicking on the <guibutton>New</guibutton>
      button in the <emphasis>Toolbar</emphasis>. A window like the one below will pop up:</para>

      <screenshot id="txns-sxn-editor-3-overview">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor-3-overview.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor-3-overview.png" format="PNG"
                       srccredit="Cristian Marchi" />
          </imageobject>

          <textobject>
            <phrase>
              <guimenuitem>Edit Scheduled Transaction</guimenuitem> window, 
              <guilabel>Overview</guilabel> tab</phrase>
          </textobject>

          <caption><para><guimenuitem>Edit Scheduled Transaction</guimenuitem>
           window, <guilabel>Overview</guilabel> tab</para></caption>
        </mediaobject>
      </screenshot>

      <para>First, let&rsquo;s enter a name for this new scheduled
      transaction in the top of the window.</para>
      <note>
        <para>This name will only identify the transaction
        in the <guilabel>Edit Scheduled Transaction</guilabel> window,
        it will never appear in the ledger.</para>
      </note>

      <para>In the <guilabel>Options</guilabel> pane of the <guilabel>Overview</guilabel>
      tab you have four options:</para>

      <variablelist>
        <varlistentry><term><guilabel>Enable</guilabel></term>
          <listitem>
            <para>Sets the status of the scheduled transaction.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Create automatically</guilabel></term>
          <listitem>
            <para>If enabled, will insert this transaction in the
            ledger without asking you before (see below). If needed, you can be advised
            when the transaction is entered by checking the <guilabel>Notify me when created</guilabel>
            option.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Create in advance</guilabel></term>
          <listitem>
            <para>Sets how many days in advance the transaction will be created.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Remind in advance</guilabel></term>
          <listitem>
            <para>Sets how many days in advance a reminder is presented. This
            can be used, for example, when you have to pay something by check, and a reminder
            one week before allows you to send your check before the deadline.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The <guilabel>Occurences</guilabel> pane allows you to tell <application>&app;</application> that
      this scheduled transaction won&rsquo;t last for ever. For example if you are repaying a loan,
      you can enter the loan end date or the number of occurences left.</para>

      <para>Select now the <guilabel>Frequency</guilabel> tab in the <guilabel>Edit Scheduled Transaction</guilabel> window.
      Here you can set the time-related options of the transaction.</para>

      <screenshot id="txns-sxn-editor-3-frequency">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor-3-frequency.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor-3-frequency.png" format="PNG"
                       srccredit="Cristian Marchi" />
          </imageobject>

          <textobject>
            <phrase>
              <guimenuitem>Edit Scheduled Transaction</guimenuitem> window,
              <guilabel>Frequency</guilabel> tab</phrase>
          </textobject>

          <caption><para><guimenuitem>Edit Scheduled Transaction</guimenuitem>
            window, <guilabel>Frequency</guilabel> tab</para></caption>
        </mediaobject>
      </screenshot>

      <variablelist>
        <varlistentry><term><guilabel>Frequency</guilabel></term>
          <listitem>
            <para>Sets the basic frequency of the transaction, with options for <guilabel>once</guilabel>,
            <guilabel>daily</guilabel>, <guilabel>weekly</guilabel>, <guilabel>semi-monthly</guilabel> and
            <guilabel>monthly</guilabel>.
            In this example, this is set to <guilabel>monthly</guilabel>.</para>
            <note>
              <para>It is possible to set a transaction to occur at intervals <emphasis>other</emphasis> than
              those listed in the <guilabel>Frequency</guilabel> list, by changing the setting in the
              <guilabel>Every</guilabel> control (see below).</para>
            </note>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Start Date</guilabel></term>
          <listitem>
            <para>Sets when the transaction will begin. In the example, this would
            be set to the start of the next month.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>Every</guilabel></term>
          <listitem>
            <para>This option allows you to schedule transactions by multiplies of the value in
            <guilabel>Frequency</guilabel>. For example, to create a transaction that runs every 3 weeks, set
            <guilabel>Frequency</guilabel> to <guilabel>Weeks</guilabel> and <guilabel>Every</guilabel> to
            <guilabel>3</guilabel>.</para>
          </listitem>
        </varlistentry>

        <varlistentry><term><guilabel>On the</guilabel> and <guilabel>Except on weekends</guilabel></term>
          <listitem>
            <para>Sets the day of the month that the transaction is scheduled, and controls what
            <application>&app;</application> will do when the day occurs on a weekend day.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>We know that the subscription is taken on the 28th each month, so the <guilabel>Start date</guilabel>
        will be November 1, 2003 (assuming November is the next month), the <guilabel>Frequency</guilabel> will be
        <guilabel>Monthly</guilabel>, it will be taken every month on the 28th. Since in our example the internet
        subscription is automatically taken from the account, we have no need to create it in advance, nor
        give an end date.</para>
      </note>

      <para>When the elements on this tab are filled in, <application>&app;</application> will highlights the
      calendar below to indicate when future transactions will be run.</para>

      <para>Finally select the <guilabel>Template Transaction</guilabel> tab and enter your transaction
      in the lower part as you would do in the ledger, with the only difference of having no date.</para>

      <para>Now, you should have a window like this:</para>

      <screenshot id="txns-sxn-editor-3-template">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor-3-template.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor-3-template.png" format="PNG"
                       srccredit="Cristian Marchi" />
          </imageobject>

          <textobject>
            <phrase><guimenuitem>Edit Scheduled Transaction</guimenuitem>
              window, <guilabel>Template Transaction</guilabel> tab</phrase>
          </textobject>

          <caption><para><guimenuitem>Edit Scheduled Transaction</guimenuitem>
            window, <guilabel>Template Transaction</guilabel> tab</para></caption>
        </mediaobject>
      </screenshot>

      <para>Remember to click on the <guibutton>Enter</guibutton> icon, to validate and enter the
      transaction.</para>

      <para>Now click <guibutton>OK</guibutton>, it takes you to the <guilabel>Scheduled Transactions</guilabel> tab,
      now showing one item in the <guilabel>Transactions</guilabel> list:</para>

      <screenshot id="txns-sxn-editor-4">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor-4.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor-4.png" format="PNG"
                       srccredit="Cristian Marchi" />
          </imageobject>

          <textobject>
            <phrase>Entered scheduled transaction</phrase>
          </textobject>

          <caption><para>Entered scheduled transaction</para></caption>
        </mediaobject>
      </screenshot>

      <tip>
        <para>If you click in the calendar part on the first day of one month, a
        small window, following your mouse, will show you what is planned for
        this day. To make the small window disappear again, just click in it
        one more time.</para>
      </tip>

      <para>You can now close the <guilabel>Scheduled Transaction</guilabel> tab, and
      <guilabel>save</guilabel> your work.</para>

      <note>
        <para>What comes below is just an illustration, and is not meant to be
        entered into the <application>&app;</application> database at this stage. As per this example,
        the below dialogs will appear when the scheduled transaction is
        supposed to run.</para>
      </note>

      <para>From now on, when <application>&app;</application> is launched and a scheduled
      transaction is scheduled or need to be entered,
      you may see a <guilabel>Since Last Run...</guilabel> window summarizing the scheduled transactions
      operations (<guilabel>Reminder</guilabel>, <guilabel>To-Create</guilabel> etc... a better
      description of each option can be found in the <application>&app;</application> manual):</para>

      <screenshot id="txns-sxn-editor-slr">
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="figures/txns_sxn_editor_slr.png" format="PNG"
                       srccredit="Cristian Marchi" width="510"/>
          </imageobject>

          <imageobject role="fo">
            <imagedata fileref="figures/txns_sxn_editor_slr.png" format="PNG"
                       srccredit="Cristian Marchi" />
          </imageobject>

          <textobject>
            <phrase>Scheduled transaction popup reminder</phrase>
          </textobject>

          <caption><para>Scheduled transaction popup reminder</para></caption>
        </mediaobject>
      </screenshot>

      <para>You can click on the <guilabel>Status</guilabel> column to change
      the scheduled transaction status if needed. Then just click on <guibutton>Ok</guibutton> to
      close the <guilabel>Since Last Run...</guilabel> window and to apply the pending operations.
      Select <guibutton>Cancel</guibutton> to skip entering in the ledger the pending operations.</para>

      <para>If the <guilabel>Status</guilabel> field was set to <guilabel>To-Create</guilabel>,
      then if you take a look in your bank account register, you&rsquo;ll see the transaction has been created:</para>

      <tip>
        <para>If you enable the <guilabel>Review created transactions</guilabel> option in the lower right of the
        <guilabel>Since Last Run...</guilabel> window, <application>&app;</application> will open, after pressing
        <guibutton>Ok</guibutton>, the register tab of each account where the scheduled
        transactions were entered automatically.</para>
      </tip>

      <note>
        <para>If you entered the transaction for 28 of April at this stage,
        then please <emphasis>revert back</emphasis> to the last saved <application>&app;</application> file
        by selecting <menuchoice><guimenu>File</guimenu><guimenuitem>Open</guimenuitem></menuchoice> and
        choosing the previously saved <filename>gcashdata_3</filename> <application>&app;</application> file.</para>
      </note>
    </sect3>
  </sect2>

  <sect2 id="txns-puttoget1">
    <title>Putting It All Together</title>

    <para>In the previous sections of this chapter the concepts and mechanics
    of working with transactions in <application>&app;</application> have been discussed. This section
    will expand upon the chart of accounts initially built in the previous
    chapter, by setting some opening balances, adding transactions and a
    scheduled transaction.</para>

    <sect3 id="txns-puttoget-openfile">
      <title>Open <application>&app;</application> file</title>

      <para>Start with opening the previous datafile we stored,
      <filename>gcashdata_3emptyAccts</filename>, and store it as
      <filename>gcashdata_4</filename> directly. The main window should look
      something like this:</para>

      <screenshot id="txns-puttoget1-Charts">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_puttoget_Charts.png" format="PNG"
                       srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Starting point for Putting It All Together</phrase>
          </textobject>

          <caption><para>This image shows the starting point for this
          section.</para></caption>
        </mediaobject>
      </screenshot>
    </sect3>

    <sect3 id="txns-puttoget-open2">
      <title>Opening Balances</title>

      <para>As shown earlier in <xref linkend="txns-registers-twoaccount2"/>
      with the <emphasis>Assets:Checking</emphasis>
      account, the starting balances in an account are typically assigned to a
      special account called <emphasis>Equity:Opening Balance</emphasis>. To
      start filling in this chart of account, begin by setting the starting
      balances for the accounts. Assume that there is $1000 in the savings
      account and $500 charged on the credit card.</para>

      <orderedlist>
        <listitem>
          <para>Open the <emphasis>Assets:Savings</emphasis> account register.
          Select <guimenu>View</guimenu> from the menu and check to make sure
          you are in Basic Ledger style. You will view your transactions in
          the other modes later, but for now let&rsquo;s enter a basic transaction
          using the basic default style.</para>
        </listitem>

        <listitem>
          <para>From the <emphasis>Assets:Savings</emphasis> account register
          window, enter a basic 2 account transaction to set your starting
          balance to $1000, transferred from <emphasis>Equity:Opening Balance</emphasis>.
          Remember, basic transactions transfer money from
          a source account to a destination account. Record the transaction
          (press the <keycap function="enter">Enter</keycap> key, or click on
          the <guibutton>Enter</guibutton> icon).</para>
        </listitem>

        <listitem>
          <para>From the <emphasis>Assets:Checking</emphasis> account register
          window, enter a basic 2 account transaction to set your starting
          balance to $1000, transferred from <emphasis>Equity:Opening Balance</emphasis>.</para>
        </listitem>

        <listitem>
          <para>From the <emphasis>Liabilities:Visa</emphasis> account
          register window, enter a basic 2 account transaction to set your
          starting balance to $500, transferred from <emphasis>Equity:Opening Balance</emphasis>.
          This is done by entering the $500 as a <guilabel>charge</guilabel>
          in the <emphasis>Visa</emphasis> account (or <guilabel>decrease</guilabel> in the <emphasis>Opening Balance</emphasis> account),
          since it is money you borrowed. Record the transaction (press the
          <keycap function="enter">Enter</keycap> key, or click on
          the <guibutton>Enter</guibutton> icon).</para>
        </listitem>
      </orderedlist>

      <para>You should now have 3 accounts with opening balances set.
      <emphasis>Assets:Checking</emphasis>,
      <emphasis>Assets:Savings</emphasis>, and
      <emphasis>Liabilities:Visa</emphasis>.</para>

      <screenshot id="txns-puttoget1-Charts1">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_puttoget_Charts1.png"
                       format="PNG" srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Chart accounts after setting opening balance</phrase>
          </textobject>

          <caption><para>This image shows the opening
          balances.</para></caption>
        </mediaobject>
      </screenshot>
    </sect3>

    <sect3 id="txns-puttoget-add2">
      <title>Additional Transaction Examples</title>

      <para>Now add some more transactions to simulate a month&rsquo;s expenses.
      During the month, $78 is spent on electricity, $45 on phone, and $350 on
      rent. All paid by check. We also spent $45.21 on groceries, received $670
      as salary, and paid our Internet bill this month. Finally, let&rsquo;s move
      $100 from the savings account to the checking account.</para>

      <orderedlist>
        <listitem>
          <para>Open the <emphasis>Expenses:Electricity</emphasis> account
          register and enter a simple 2 account transaction to pay the $78
          electrical bill at the end of the current month (eg: March 28,
          2006). Enter a description (eg: Light Company) and the check number
          (eg: 102). The <guilabel>Transfer</guilabel> account should be
          <emphasis>Assets:Checking</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Open the <emphasis>Assets:Checking</emphasis> account register
          and enter a simple 2 account transaction to pay the $45 phone bill
          at the end of the current month (eg: March 28, 2006). Enter a
          description (eg: Phone Company Name) and the check number (eg: 103).
          The <guilabel>Transfer</guilabel> account should be
          <emphasis>Expenses:Phone</emphasis>. Notice that you can enter
          expense transactions from either the credit side (the expense
          accounts) or the debit side (the asset account).</para>
        </listitem>

        <listitem>
          <para>Open the <emphasis>Expenses:Rent</emphasis> account register
          and enter a simple 2 account transaction to pay the $350 in rent at
          the end of the current month (eg: March 28, 2006). Enter a
          description (eg: April Rent) and the check number (eg: 104). The
          <guilabel>Transfer</guilabel> account should be
          <emphasis>Assets:Checking</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Duplicate this transaction using the
          <guibutton>Duplicate</guibutton> button in the <emphasis>Toolbar</emphasis>. Start by
          clicking on the current rent transaction, and click on the
          <guilabel>Duplicate</guilabel> icon. Enter the transaction date a
          month out in the future (eg: April 28, 2006), and notice the blue
          line separator that <application>&app;</application> uses to separate future transactions
          from current ones. In this way, you can enter transactions before
          they occur.</para>

          <para>You could also set up a scheduled transaction to pay your
          rent, since the value of the rent is likely to be constant for the
          foreseeable future. <itemizedlist>
              <listitem>
                <para>Start by clicking on the current (April 28) rent
                transaction, and click on the <guilabel>Schedule</guilabel>
                icon</para>
              </listitem>

              <listitem>
                <para>Change to <guilabel>Monthly</guilabel>, change
                description if needed and press <guibutton>OK</guibutton></para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para>To transfer money from your savings account to your checking
          account, open the <emphasis>Assets:Savings</emphasis> account
          register, add a new transaction setting
          the <guilabel>Transfer</guilabel> to <emphasis>Assets:Checking</emphasis> in the amount
          of $100 (date 6 March, 2006).</para>
        </listitem>

        <listitem>
          <para>As another example of a simple 2 account transaction, add
          another transaction to describe the purchase of $45.21 worth of
          groceries on 5 of March. From within the <emphasis>Assets:Checking</emphasis> account, you
          would set <guilabel>Transfer</guilabel> to
          <emphasis>Expenses:Groceries</emphasis>. The account register should
          now appear:</para>
        </listitem>

        <listitem>
          <para>To add a paycheck transaction from the
          <emphasis>Assets:Checking</emphasis> account register window, click
          on a new transaction line, and click on <guilabel>Split</guilabel>.
          First enter the description of this transaction on the first line
          (eg: <quote>Employers R Us</quote>), as well as the date (14 March). In the
          <quote>split</quote> line below this, enter the deposit into
          <emphasis>Assets:Checking</emphasis> (eg:$670). Follow this with the various tax deposits
          (<emphasis>Assets:Checking</emphasis> (eg: $670),
          <emphasis>Expenses:Taxes:Federal</emphasis> account (eg: $180),
          <emphasis>Expenses:Taxes:Medicare</emphasis> account (eg: $90), and
          <emphasis>Expenses:Taxes:Social Security</emphasis> account (eg: $60)) and
          lastly the gross total of your paycheck (eg: $1000) as a withdrawal
          transfer from <emphasis>Income:Salary</emphasis>.</para>
        </listitem>

        <listitem>
          <para>You also need to pay for your Internet subscription of 20 USD on
          the 28th.</para>
        </listitem>
      </orderedlist>

      <screenshot id="txns-puttoget2-Charts1">
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/txns_puttoget_Charts2.png"
                       format="PNG" srccredit="Bengt Thuree" />
          </imageobject>

          <textobject>
            <phrase>Chart accounts after setting all the various
            transactions</phrase>
          </textobject>

          <caption><para>This image shows the ending balances after <xref
          linkend="chapter_txns" />.</para></caption>
        </mediaobject>
      </screenshot>
    </sect3>

    <sect3 id="txns-puttoget-save">
      <title>Save file</title>

      <para>Before we go to the report section, let&rsquo;s save the <application>&app;</application> data
      file (<filename>gcashdata_4</filename>).</para>
    </sect3>

    <sect3 id="txns-puttoget-reports">
      <title>Reports</title>

      <para>But only having data available on the computer screen will not
      make your accountant happy, therefore <application>&app;</application> comes with a large number
      of highly customizable reports.</para>

<!-- Add this note when the reports chapter is ready
      <note>
        <para>More details on the reports can be found in <xref linkend="chapter_reports" /></para>
      </note>
-->

      <para>Let&rsquo;s have a look at a <guilabel>Cash Flow</guilabel>, and a
      <guilabel>Transaction</guilabel> Report.</para>

      <orderedlist>
        <listitem>
          <para>First let&rsquo;s have a look at the <guilabel>Cash Flow</guilabel>
          report for the month of March.</para>

          <para>Select the cash flow report from <menuchoice><guimenu>Reports</guimenu>
          <guisubmenu>Income &amp; Expense</guisubmenu>
          <guimenuitem>Cash Flow</guimenuitem></menuchoice>.</para>

          <screenshot id="txns-puttoget2-Cash">
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/txns_CashFlow.png" format="PNG"
                           srccredit="Bengt Thuree" />
              </imageobject>

              <textobject>
                <phrase>Cash Flow report for the month of March</phrase>
              </textobject>

              <caption><para>This image shows the Cash Flow report after <xref
              linkend="chapter_txns" />.</para></caption>
            </mediaobject>
          </screenshot>

          <para>To get this customized report, right click in the report and
          choose <guilabel>Report Options</guilabel>. Then set the time
          period, and specify which accounts you want in the report.</para>
        </listitem>

        <listitem>
          <para>Now let&rsquo;s have a look at corresponding transaction report for
          the Checking account.</para>

          <para>Select the transaction report from <menuchoice><guimenu>Reports</guimenu>
          <guimenuitem>Transaction Report</guimenuitem></menuchoice>.</para>

          <screenshot id="txns-puttoget2-TransactionRptChecking">
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/txns_TransactionRptChecking.png"
                           format="PNG" srccredit="Bengt Thuree" />
              </imageobject>

              <textobject>
                <phrase>Transaction Report for the Checking account during
                March</phrase>
              </textobject>

              <caption><para>This image shows the Transaction Report for the
              Checking account during March. </para></caption>
            </mediaobject>
          </screenshot>
        </listitem>

        <listitem>
          <para>Now let&rsquo;s change the transaction report to only show the
          various Expenses accounts.</para>

          <screenshot id="txns-puttoget2-TransactionRptExpenses">
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/txns_TransactionRptExpenses.png"
                           format="PNG" srccredit="Bengt Thuree" />
              </imageobject>

              <textobject>
                <phrase>Transaction Report for the Expenses accounts during
                March</phrase>
              </textobject>

              <caption><para>This image shows the Transaction Report for the
              various Expense accounts during March. </para></caption>
            </mediaobject>
          </screenshot>
        </listitem>
      </orderedlist>
    </sect3>
  </sect2>
</sect1>
</chapter>